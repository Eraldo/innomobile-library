var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/AuthState.html",[0,0.209,1,1.698]],["body/classes/AuthState.html",[0,0.209,1,1.702,2,0.169,3,0.169,4,0.14,5,1.635,6,2.51,7,3.695,8,0.2,9,2.51,10,0.715,11,3.033,12,3.033,13,3.033,14,3.033,15,4.526,16,3.033,17,3.033,18,1.068,19,0.783,20,0.641,21,1.976,22,4.139,23,1.009,24,1.976,25,1.781,26,0.037,27,1.368,28,0.369,29,1.956,30,3.033,31,3.033,32,3.086,33,4.189,34,4.06,35,1.976,36,2.323,37,3.712,38,3.033,39,1.976,40,2.51,41,4.811,42,1.976,43,3.033,44,3.899,45,1.976,46,3.033,47,1.038,48,1.976,49,3.033,50,1.153,51,0.875,52,1.976,53,3.033,54,1.976,55,3.033,56,1.976,57,1.976,58,3.033,59,1.976,60,3.033,61,0.804,62,1.243,63,1.635,64,0.3,65,0.462,66,1.976,67,0.418,68,0.418,69,0.418,70,0.418,71,0.641,72,0.641,73,0.418,74,0.641,75,0.418,76,0.641,77,1.976,78,1.976,79,0.462,80,0.376,81,3.054,82,3.187,83,1.045,84,0.113,85,3.033,86,3.033,87,1.635,88,1.976,89,1.976,90,1.243,91,1.976,92,0.462,93,0.864,94,3.033,95,4.06,96,1.976,97,0.71,98,1.976,99,3.033,100,1.908,101,4.139,102,1.976,103,3.69,104,2.165,105,1.976,106,1.976,107,1.976,108,2.51,109,1.976,110,1.976,111,0.51,112,0.71,113,3.033,114,3.033,115,1.976,116,1.976,117,1.976,118,1.976,119,1.976,120,0.51,121,1.976,122,1.976,123,1.976,124,1.976,125,0.018,126,0.018]],["title/interfaces/AuthStateModel.html",[32,1.903,127,1.038]],["body/interfaces/AuthStateModel.html",[2,0.359,3,0.359,4,0.297,8,0.423,26,0.036,28,0.362,29,2.155,32,3.207,36,2.862,61,0.714,64,0.635,65,0.98,79,1.193,81,4.734,83,1.339,84,0.238,92,1.286,125,0.03,126,0.03,127,1.749,128,3.465,129,0.423,130,2.574,131,3.207,132,0.869,133,0.644]],["title/interfaces/AvailableLanguageModel.html",[127,1.038,134,1.698]],["body/interfaces/AvailableLanguageModel.html",[2,0.341,3,0.341,4,0.283,8,0.5,23,0.758,26,0.037,27,1.451,28,0.351,84,0.306,125,0.029,126,0.029,127,1.928,129,0.402,131,3.11,132,0.843,133,0.717,134,3.018,135,2.506,136,2.258,137,2.026,138,2.118,139,3.53,140,3.983,141,2.011,142,1.819,143,2.506,144,1.819,145,2.011,146,2.236]],["title/classes/CheckLanguage.html",[0,0.209,147,1.527]],["body/classes/CheckLanguage.html",[0,0.381,2,0.324,3,0.324,4,0.268,10,0.797,26,0.037,28,0.373,84,0.299,125,0.028,126,0.028,129,0.382,133,0.443,137,2.304,138,1.803,142,2.184,147,2.415,148,2.377,149,0.999,150,3.009,151,3.58,152,1.908,153,3.302,154,3.747,155,2.377,156,2.121,157,0.799,158,0.72,159,2.685,160,1.908]],["title/classes/FireAuthAnonymousSignUp.html",[0,0.209,67,0.64]],["body/classes/FireAuthAnonymousSignUp.html",[0,0.399,2,0.212,3,0.212,4,0.176,8,0.25,10,0.886,18,0.639,19,0.639,20,0.978,23,0.683,26,0.038,28,0.42,47,0.523,50,1.397,51,0.523,61,0.422,64,0.87,65,0.579,67,0.758,68,0.523,69,0.523,70,0.523,71,0.523,72,0.523,73,0.523,74,0.523,75,0.523,76,0.523,79,0.987,80,0.471,83,0.579,84,0.326,92,0.579,93,1.384,97,1.198,111,1.322,112,0.579,120,1.089,125,0.021,126,0.021,129,0.25,132,0.611,133,0.42,149,0.471,157,1.039,158,0.881,161,0.639,162,1.455,163,1.314,164,3.586,165,0.703,166,1.645,167,0.926,168,1.019,169,0.579,170,0.703,171,0.703,172,1.019,173,0.703,174,0.703,175,1.395,176,0.703,177,1.198,178,0.703]],["title/classes/FireAuthUserCheck.html",[0,0.209,169,0.708]],["body/classes/FireAuthUserCheck.html",[0,0.4,2,0.214,3,0.214,4,0.177,8,0.252,10,0.887,18,0.645,19,0.645,20,0.764,23,0.476,26,0.038,28,0.42,47,0.528,50,1.401,51,0.528,61,0.426,64,0.872,65,0.585,67,0.528,68,0.528,69,0.528,70,0.528,71,0.528,72,0.528,73,0.528,74,0.528,75,0.528,76,0.528,79,1.088,80,0.476,83,0.585,84,0.327,92,0.585,93,1.386,97,1.203,111,1.327,112,0.585,120,1.095,125,0.021,126,0.021,129,0.252,132,0.616,133,0.423,149,0.688,157,1.043,158,0.808,161,0.645,162,1.401,163,1.205,165,0.71,166,1.648,167,0.645,168,0.71,169,0.845,170,1.026,171,0.71,172,1.026,173,0.71,174,0.71,175,1.401,176,0.71,177,1.205,178,0.71,179,2.499]],["title/classes/FireAuthUserCreateFailed.html",[0,0.209,68,0.64]],["body/classes/FireAuthUserCreateFailed.html",[0,0.397,2,0.206,3,0.206,4,0.171,8,0.243,10,0.881,18,0.621,19,0.621,20,0.878,23,0.79,25,0.825,26,0.038,27,0.621,28,0.423,29,0.906,47,0.509,50,1.414,51,0.509,61,0.41,64,0.866,65,0.563,67,0.509,68,0.743,69,0.509,70,0.509,71,0.509,72,0.509,73,0.509,74,0.509,75,0.509,76,0.509,79,0.971,80,0.458,83,0.563,84,0.325,92,0.563,93,1.386,97,1.187,111,1.309,112,0.563,120,1.352,125,0.021,126,0.021,129,0.243,132,0.599,133,0.411,149,0.458,157,1.027,158,0.869,161,0.621,162,1.488,163,1.179,165,0.683,166,1.636,167,0.621,168,0.683,169,0.563,170,0.683,171,0.683,172,0.998,173,0.683,174,0.683,175,1.488,176,0.683,177,1.179,178,0.683,180,1.604,181,1.717,182,3.513,183,2.405]],["title/classes/FireAuthUserCreateSuccess.html",[0,0.209,69,0.64]],["body/classes/FireAuthUserCreateSuccess.html",[0,0.397,2,0.205,3,0.205,4,0.17,8,0.241,10,0.88,18,0.617,19,0.617,20,0.875,23,0.787,25,0.82,26,0.038,27,0.617,28,0.422,29,0.9,47,0.505,50,1.411,51,0.505,61,0.407,64,0.865,65,0.559,67,0.505,68,0.505,69,0.74,70,0.505,71,0.505,72,0.505,73,0.505,74,0.505,75,0.505,76,0.505,79,0.968,80,0.455,83,0.559,84,0.324,92,0.559,93,1.384,97,1.184,111,1.306,112,1.133,120,1.068,125,0.021,126,0.021,129,0.241,132,0.596,133,0.409,149,0.455,157,1.024,158,0.866,161,0.617,162,1.485,163,1.175,165,0.679,166,1.634,167,0.617,168,0.679,169,0.559,170,0.679,171,0.679,172,0.993,173,0.679,174,0.679,175,1.376,176,0.679,177,1.376,178,1.376,180,1.596,184,2.389,185,3.496,186,2.389]],["title/classes/FireAuthUserDelete.html",[0,0.209,70,0.64]],["body/classes/FireAuthUserDelete.html",[0,0.4,2,0.214,3,0.214,4,0.177,8,0.252,10,0.887,18,0.932,19,0.645,20,0.764,23,0.476,26,0.038,28,0.42,47,0.528,50,1.401,51,0.528,61,0.426,64,0.872,65,0.585,67,0.528,68,0.528,69,0.528,70,0.764,71,0.528,72,0.528,73,0.528,74,0.528,75,0.528,76,0.528,79,0.993,80,0.476,83,0.585,84,0.327,92,0.585,93,1.386,97,1.203,111,1.327,112,0.585,120,1.095,125,0.021,126,0.021,129,0.252,132,0.616,133,0.423,149,0.476,157,1.043,158,0.808,161,0.645,162,1.401,163,1.321,165,0.71,166,1.648,167,0.645,168,0.71,169,0.585,170,0.71,171,1.026,172,1.026,173,0.71,174,0.71,175,1.401,176,0.71,177,1.205,178,0.71,187,2.499]],["title/classes/FireAuthUserFailed.html",[0,0.209,71,0.64]],["body/classes/FireAuthUserFailed.html",[0,0.398,2,0.207,3,0.207,4,0.172,8,0.245,10,0.882,18,0.625,19,0.625,20,0.881,23,0.793,25,0.83,26,0.038,27,0.625,28,0.423,29,0.912,47,0.512,50,1.416,51,0.512,61,0.413,64,0.867,65,0.566,67,0.512,68,0.512,69,0.512,70,0.512,71,0.747,72,0.512,73,0.512,74,0.512,75,0.512,76,0.512,79,0.975,80,0.461,83,0.566,84,0.325,92,0.566,93,1.379,97,1.19,111,1.312,112,0.566,120,1.355,125,0.021,126,0.021,129,0.245,132,0.602,133,0.413,149,0.461,157,1.03,158,0.793,161,0.625,162,1.383,163,1.184,165,0.688,166,1.638,167,0.625,168,0.688,169,0.566,170,0.688,171,0.688,172,1.003,173,0.688,174,0.688,175,1.444,176,1.003,177,1.184,178,0.688,180,1.612,181,1.728,188,3.53,189,2.421]],["title/classes/FireAuthUserNull.html",[0,0.209,72,0.64]],["body/classes/FireAuthUserNull.html",[0,0.4,2,0.214,3,0.214,4,0.177,8,0.252,10,0.887,18,0.645,19,0.645,20,0.764,23,0.476,26,0.038,28,0.42,47,0.528,50,1.427,51,0.528,61,0.426,64,0.872,65,0.585,67,0.528,68,0.528,69,0.528,70,0.528,71,0.528,72,0.764,73,0.528,74,0.528,75,0.528,76,0.528,79,1.088,80,0.476,83,0.585,84,0.327,92,0.585,93,1.386,97,1.203,111,1.327,112,0.585,120,1.095,125,0.021,126,0.021,129,0.252,132,0.616,133,0.423,149,0.476,157,1.043,158,0.808,161,0.645,162,1.401,163,1.205,165,0.71,166,1.648,167,0.645,168,0.71,169,0.585,170,0.71,171,0.71,172,1.026,173,0.71,174,1.026,175,1.401,176,0.71,177,1.205,178,0.71,190,2.499]],["title/classes/FireAuthUserSignOut.html",[0,0.209,75,0.64]],["body/classes/FireAuthUserSignOut.html",[0,0.4,2,0.213,3,0.213,4,0.177,8,0.252,10,0.887,18,0.643,19,0.643,20,0.762,23,0.474,26,0.038,28,0.42,47,0.527,50,1.399,51,0.527,61,0.425,64,0.872,65,0.583,67,0.527,68,0.527,69,0.527,70,0.527,71,0.527,72,0.527,73,0.527,74,0.527,75,0.762,76,0.527,79,0.991,80,0.474,83,0.583,84,0.327,92,0.583,93,1.385,97,1.269,111,1.399,112,0.583,120,1.093,125,0.021,126,0.021,129,0.252,132,0.614,133,0.422,149,0.474,157,1.041,158,0.806,161,0.643,162,1.399,163,1.319,165,0.708,166,1.647,167,0.643,168,0.708,169,0.583,170,0.708,171,0.708,172,1.024,173,0.708,174,0.708,175,1.399,176,0.708,177,1.203,178,0.708,191,2.49]],["title/classes/FireAuthUserSignedOutFailed.html",[0,0.209,73,0.64]],["body/classes/FireAuthUserSignedOutFailed.html",[0,0.397,2,0.206,3,0.206,4,0.171,8,0.243,10,0.882,18,0.622,19,0.622,20,0.879,23,0.791,25,0.826,26,0.038,27,0.622,28,0.423,29,0.908,47,0.509,50,1.414,51,0.509,61,0.411,64,0.856,65,0.564,67,0.509,68,0.509,69,0.509,70,0.509,71,0.509,72,0.509,73,0.744,74,0.509,75,0.509,76,0.509,79,0.972,80,0.459,83,0.564,84,0.325,92,0.564,93,1.378,97,1.257,111,1.387,112,0.564,120,1.353,125,0.021,126,0.021,129,0.243,132,0.6,133,0.412,149,0.459,157,1.028,158,0.791,161,0.622,162,1.381,163,1.18,165,0.684,166,1.637,167,0.622,168,0.684,169,0.564,170,0.684,171,0.684,172,0.999,173,0.684,174,0.684,175,1.489,176,0.684,177,1.18,178,0.684,180,1.606,181,1.72,192,3.517,193,2.409]],["title/classes/FireAuthUserSignedOutSuccess.html",[0,0.209,74,0.64]],["body/classes/FireAuthUserSignedOutSuccess.html",[0,0.399,2,0.212,3,0.212,4,0.175,8,0.249,10,0.885,18,0.637,19,0.637,20,0.978,23,0.682,26,0.038,28,0.42,47,0.522,50,1.423,51,0.522,61,0.421,64,0.861,65,0.578,67,0.522,68,0.522,69,0.522,70,0.522,71,0.522,72,0.522,73,0.522,74,0.757,75,0.522,76,0.522,79,0.986,80,0.47,83,0.578,84,0.326,92,0.578,93,1.383,97,1.266,111,1.396,112,0.578,120,1.088,125,0.021,126,0.021,129,0.249,132,0.611,133,0.419,149,0.47,157,1.038,158,0.802,161,0.637,162,1.394,163,1.197,165,0.702,166,1.644,167,0.637,168,0.702,169,0.578,170,0.702,171,0.702,172,1.197,173,0.702,174,0.702,175,1.394,176,0.702,177,1.313,178,0.702,194,3.581]],["title/classes/FireAuthUserSuccess.html",[0,0.209,51,0.64]],["body/classes/FireAuthUserSuccess.html",[0,0.397,2,0.206,3,0.206,4,0.17,8,0.243,10,0.881,18,0.62,19,0.62,20,0.877,23,0.79,25,0.824,26,0.038,27,0.62,28,0.422,29,0.905,47,0.508,50,1.413,51,0.742,61,0.409,64,0.865,65,0.562,67,0.508,68,0.508,69,0.508,70,0.508,71,0.508,72,0.508,73,0.508,74,0.508,75,0.508,76,0.508,79,1.068,80,0.457,83,0.562,84,0.325,92,1.136,93,1.405,97,1.186,111,1.308,112,0.562,120,1.071,125,0.021,126,0.021,129,0.243,132,0.598,133,0.411,149,0.457,157,1.026,158,0.79,161,0.62,162,1.379,163,1.178,165,0.682,166,1.636,167,0.62,168,0.682,169,0.562,170,0.682,171,0.682,172,1.178,173,0.997,174,0.682,175,1.379,176,0.682,177,1.178,178,0.682,180,1.602,195,2.401,196,3.509,197,2.401]],["title/classes/FireAuthUserToken.html",[0,0.209,76,0.64]],["body/classes/FireAuthUserToken.html",[0,0.4,2,0.214,3,0.214,4,0.178,8,0.253,10,0.887,18,0.646,19,0.934,20,0.765,23,0.477,26,0.038,28,0.421,47,0.529,50,1.401,51,0.529,61,0.427,64,0.872,65,0.586,67,0.529,68,0.529,69,0.529,70,0.529,71,0.529,72,0.529,73,0.529,74,0.529,75,0.529,76,0.765,79,0.994,80,0.477,83,0.846,84,0.327,92,0.586,93,1.386,97,1.203,111,1.327,112,0.586,120,1.096,125,0.021,126,0.021,129,0.253,132,0.617,133,0.424,149,0.477,157,1.044,158,0.809,161,0.646,162,1.402,163,1.207,165,0.711,166,1.648,167,0.646,168,0.711,169,0.586,170,0.711,171,0.711,172,1.028,173,0.711,174,0.711,175,1.402,176,0.711,177,1.207,178,0.711,198,2.503]],["title/modules/FireuserModule.html",[199,1.698,200,1.903]],["body/modules/FireuserModule.html",[0,0.193,1,2.2,2,0.24,3,0.24,4,0.199,10,0.425,25,0.961,26,0.038,27,1.378,37,1.763,61,0.981,62,1.763,63,2.319,64,0.686,80,0.534,84,0.257,90,2.843,100,1.763,104,3.677,125,0.023,126,0.023,129,0.283,130,1.415,136,2.502,137,1.056,138,2.011,143,1.763,144,1.79,145,1.415,146,2.747,156,2.2,180,1.28,199,2.891,200,3.079,201,2.802,202,2.802,203,4.417,204,3.919,205,3.74,206,4.417,207,4.52,208,2.319,209,3.243,210,2.319,211,4.05,212,2.319,213,2.319,214,2.319,215,2.319,216,2.319,217,2.319,218,2.319,219,2.319,220,2.319,221,2.319,222,2.319,223,2.319,224,2.319,225,2.319,226,2.319,227,2.319,228,2.319,229,2.319,230,4.52,231,3.919,232,2.001,233,3.919,234,3.919,235,2.319,236,3.919,237,2.802,238,2.802,239,2.802,240,2.802,241,2.2,242,2.802,243,2.802,244,2.802,245,2.802,246,2.319,247,2.802,248,2.319,249,2.802,250,3.74,251,3.919]],["title/interfaces/LanguageConfigModel.html",[127,1.038,144,1.381]],["body/interfaces/LanguageConfigModel.html",[2,0.347,3,0.347,4,0.287,8,0.409,26,0.037,27,1.045,28,0.355,84,0.308,125,0.029,126,0.029,127,1.94,129,0.409,131,2.547,132,0.852,133,0.702,134,3.174,135,2.547,136,1.849,137,2.041,138,1.526,139,2.891,141,2.044,142,1.849,143,3.142,144,2.28,145,2.855,146,3.174]],["title/classes/LanguageState.html",[0,0.209,241,1.698]],["body/classes/LanguageState.html",[0,0.246,2,0.211,3,0.211,4,0.175,6,2.956,7,3.481,8,0.249,9,2.956,10,0.638,15,2.037,20,0.521,23,0.68,25,0.844,26,0.038,27,0.922,28,0.175,29,0.927,33,2.037,34,3.481,36,3.14,37,3.318,40,2.037,41,4.056,44,2.956,47,0.521,61,0.872,62,1.548,80,0.469,82,1.757,84,0.14,87,4.056,90,2.247,95,3.819,100,2.646,108,2.956,125,0.021,126,0.021,129,0.361,130,2.124,133,0.288,136,1.631,137,2.249,138,1.346,141,2.33,142,2.107,144,1.631,145,1.804,147,1.804,149,0.469,150,2.247,151,1.548,152,1.804,153,3.083,155,1.548,156,2.591,159,1.381,160,1.804,206,2.037,232,1.757,241,2.005,252,2.037,253,3.573,254,4.615,255,3.573,256,2.461,257,3.481,258,2.461,259,3.573,260,1.757,261,3.573,262,2.037,263,3.573,264,2.037,265,2.461,266,2.461,267,2.461,268,2.037,269,2.461,270,2.461,271,2.461,272,2.037,273,2.461,274,2.461,275,2.461,276,2.956,277,2.461,278,2.461,279,2.461,280,2.461,281,3.573,282,2.461,283,2.461,284,2.461,285,3.573,286,2.461,287,2.461,288,2.461,289,2.461,290,2.461,291,4.206,292,2.461,293,2.461,294,2.461,295,3.573,296,2.461,297,2.461,298,2.461]],["title/interfaces/LanguageStateModel.html",[127,1.038,141,1.527]],["body/interfaces/LanguageStateModel.html",[2,0.352,3,0.352,4,0.291,8,0.415,26,0.037,27,1.06,28,0.291,36,2.304,84,0.31,125,0.03,126,0.03,127,1.949,129,0.415,130,2.073,131,3.169,132,0.859,133,0.704,134,2.827,135,2.583,136,1.875,137,2.053,138,1.547,139,2.931,141,2.543,142,2.594,143,2.583,144,1.875,145,2.073,146,2.304]],["title/classes/UpdateLanguage.html",[0,0.209,152,1.527]],["body/classes/UpdateLanguage.html",[0,0.369,2,0.298,3,0.298,4,0.247,8,0.351,10,0.766,20,0.735,23,0.863,25,1.192,26,0.037,27,0.897,28,0.394,29,1.31,36,1.951,84,0.287,125,0.027,126,0.027,129,0.458,132,0.773,133,0.65,137,2.3,138,2.09,142,2.597,147,1.755,148,2.187,149,0.863,150,2.187,151,3.578,152,2.289,153,3.174,154,3.602,155,3.174,156,1.951,157,0.735,158,0.662,159,2.545,160,1.755,180,2.07,299,3.476,300,3.476,301,3.476]],["title/classes/UseLanguage.html",[0,0.209,160,1.527]],["body/classes/UseLanguage.html",[0,0.381,2,0.324,3,0.324,4,0.268,10,0.797,26,0.037,28,0.373,84,0.299,125,0.028,126,0.028,129,0.382,133,0.443,137,2.304,138,1.803,142,2.184,147,1.908,148,2.377,149,0.911,150,2.377,151,3.58,152,1.908,153,3.302,154,3.747,155,2.377,156,2.121,157,0.799,158,0.911,159,2.946,160,2.415]],["title/coverage.html",[302,3.419]],["body/coverage.html",[0,0.426,1,1.876,4,0.237,5,2.766,26,0.037,28,0.237,32,2.103,51,0.707,67,0.707,68,0.707,69,0.707,70,0.707,71,0.707,72,0.707,73,0.707,74,0.707,75,0.707,76,0.707,125,0.026,126,0.026,127,1.806,128,2.766,134,1.876,135,3.114,141,1.688,144,1.526,147,1.688,148,3.114,152,1.688,158,0.636,160,1.688,161,1.559,169,0.782,241,1.876,252,2.766,260,2.386,302,2.766,303,3.342,304,3.342,305,3.342,306,2.766,307,2.766,308,5.476,309,3.342,310,5.476,311,5.476,312,5.626,313,5.626,314,5.476,315,5.476,316,3.342,317,3.342,318,4.418,319,4.418,320,3.342,321,3.342]],["title/dependencies.html",[322,2.089,323,2.598]],["body/dependencies.html",[26,0.037,62,2.792,64,0.674,125,0.031,126,0.031,130,2.666,232,3.169,235,3.673,262,3.673,264,3.673,323,3.169,324,4.439,325,4.439,326,5.637,327,4.439,328,4.439,329,4.439,330,5.281,331,4.439,332,4.439,333,5.281]],["title/index.html",[8,0.255,272,2.089,334,2.524]],["body/index.html",[1,2.317,25,1.036,26,0.037,27,1.41,37,2.597,47,0.639,61,0.515,64,0.714,80,0.575,82,2.156,84,0.172,90,2.958,93,1.309,100,1.9,104,3.778,112,1.238,125,0.024,126,0.024,130,2.672,136,2.553,137,1.772,138,2.058,145,1.525,146,2.837,159,2.97,200,1.9,203,4.182,205,2.5,208,3.891,209,3.416,210,2.5,211,3.416,212,2.5,213,2.5,214,2.5,215,2.5,216,2.5,217,2.5,218,2.5,219,2.5,220,2.5,221,2.5,222,2.5,223,2.5,224,2.5,225,2.5,226,2.5,227,2.5,228,2.5,229,2.5,241,1.696,248,2.5,257,4.182,268,2.5,276,2.5,307,3.416,322,2.5,335,3.021,336,3.021,337,3.021,338,3.021,339,3.021,340,4.702,341,4.128,342,4.128,343,3.021,344,3.021,345,3.021,346,3.021,347,4.128,348,3.021,349,3.021,350,3.021,351,4.702,352,3.021,353,3.021,354,3.021,355,3.021,356,3.021,357,3.021,358,3.021,359,3.021,360,3.021,361,3.021,362,3.021]],["title/modules.html",[199,2.319]],["body/modules.html",[26,0.033,125,0.033,126,0.033,136,2.206,199,2.712,200,3.039,363,4.832,364,4.832]],["title/overview.html",[365,3.419]],["body/overview.html",[0,0.318,26,0.032,84,0.262,97,1.078,125,0.032,126,0.032,127,1.58,199,3.029,246,3.811,250,3.811,260,3.288,323,3.288,365,3.811,366,4.605,367,4.605,368,5.397,369,4.605,370,5.397,371,4.605,372,4.605]],["title/miscellaneous/typealiases.html",[373,2.089,374,3.639]],["body/miscellaneous/typealiases.html",[8,0.465,26,0.035,28,0.327,64,0.699,125,0.032,126,0.032,167,1.189,306,3.811,373,3.811,375,4.605,376,5.724,377,4.605,378,4.605,379,4.605,380,4.605,381,4.605,382,4.605,383,4.605]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["1",{"_index":370,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":371,"title":{},"body":{"overview.html":{}}}],["2).tolowercas",{"_index":294,"title":{},"body":{"classes/LanguageState.html":{}}}],["22/22",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":372,"title":{},"body":{"overview.html":{}}}],["4/11",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["account",{"_index":163,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["action",{"_index":47,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"classes/LanguageState.html":{},"index.html":{}}}],["action([fireauthusernul",{"_index":124,"title":{},"body":{"classes/AuthState.html":{}}}],["action(checklanguag",{"_index":274,"title":{},"body":{"classes/LanguageState.html":{}}}],["action(fireauthanonymoussignup",{"_index":117,"title":{},"body":{"classes/AuthState.html":{}}}],["action(fireauthuserdelet",{"_index":105,"title":{},"body":{"classes/AuthState.html":{}}}],["action(fireauthusersignout",{"_index":107,"title":{},"body":{"classes/AuthState.html":{}}}],["action(fireauthusersuccess",{"_index":122,"title":{},"body":{"classes/AuthState.html":{}}}],["action(fireauthusertoken",{"_index":98,"title":{},"body":{"classes/AuthState.html":{}}}],["action(updatelanguag",{"_index":284,"title":{},"body":{"classes/LanguageState.html":{}}}],["action(uselanguag",{"_index":288,"title":{},"body":{"classes/LanguageState.html":{}}}],["add",{"_index":203,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["afauth",{"_index":30,"title":{},"body":{"classes/AuthState.html":{}}}],["alias",{"_index":375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular/common",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":232,"title":{},"body":{"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"dependencies.html":{}}}],["angular/fir",{"_index":235,"title":{},"body":{"modules/FireuserModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":63,"title":{},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{}}}],["angular/fire/firestor",{"_index":238,"title":{},"body":{"modules/FireuserModule.html":{}}}],["angularfireauth",{"_index":22,"title":{},"body":{"classes/AuthState.html":{}}}],["angularfireauthmodul",{"_index":236,"title":{},"body":{"modules/FireuserModule.html":{}}}],["angularfiremodul",{"_index":233,"title":{},"body":{"modules/FireuserModule.html":{}}}],["angularfirestoremodul",{"_index":237,"title":{},"body":{"modules/FireuserModule.html":{}}}],["angularfirestoremodule.enablepersist",{"_index":244,"title":{},"body":{"modules/FireuserModule.html":{}}}],["anonym",{"_index":168,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["app",{"_index":247,"title":{},"body":{"modules/FireuserModule.html":{}}}],["app.modul",{"_index":344,"title":{},"body":{"index.html":{}}}],["app.module.t",{"_index":207,"title":{},"body":{"modules/FireuserModule.html":{}}}],["async",{"_index":15,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["auth",{"_index":79,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["auth.act",{"_index":77,"title":{},"body":{"classes/AuthState.html":{}}}],["auth.model",{"_index":78,"title":{},"body":{"classes/AuthState.html":{}}}],["authent",{"_index":340,"title":{},"body":{"index.html":{}}}],["authentif",{"_index":339,"title":{},"body":{"index.html":{}}}],["authservic",{"_index":307,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["authstat",{"_index":1,"title":{"classes/AuthState.html":{}},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"coverage.html":{},"index.html":{}}}],["authstatemodel",{"_index":32,"title":{"interfaces/AuthStateModel.html":{}},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"coverage.html":{}}}],["authus",{"_index":81,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{}}}],["avail",{"_index":136,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"index.html":{},"modules.html":{}}}],["availablelanguag",{"_index":146,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{},"index.html":{}}}],["availablelanguagemodel",{"_index":134,"title":{"interfaces/AvailableLanguageModel.html":{}},"body":{"interfaces/AvailableLanguageModel.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{}}}],["await",{"_index":101,"title":{},"body":{"classes/AuthState.html":{}}}],["bootstrap",{"_index":367,"title":{},"body":{"overview.html":{}}}],["brows",{"_index":364,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":150,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["browserlanguag",{"_index":291,"title":{},"body":{"classes/LanguageState.html":{}}}],["canceluncomplet",{"_index":285,"title":{},"body":{"classes/LanguageState.html":{}}}],["case",{"_index":345,"title":{},"body":{"index.html":{}}}],["catch",{"_index":113,"title":{},"body":{"classes/AuthState.html":{}}}],["check",{"_index":149,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["checklanguag",{"_index":147,"title":{"classes/CheckLanguage.html":{}},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{}}}],["checklanguage(ctx",{"_index":275,"title":{},"body":{"classes/LanguageState.html":{}}}],["checksess",{"_index":271,"title":{},"body":{"classes/LanguageState.html":{}}}],["checkus",{"_index":170,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["class",{"_index":0,"title":{"classes/AuthState.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}},"body":{"classes/AuthState.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{},"overview.html":{}}}],["code",{"_index":138,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"index.html":{}}}],["command",{"_index":60,"title":{},"body":{"classes/AuthState.html":{}}}],["config",{"_index":143,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{}}}],["console.log('authus",{"_index":350,"title":{},"body":{"index.html":{}}}],["console.log('error",{"_index":115,"title":{},"body":{"classes/AuthState.html":{}}}],["console.log('us",{"_index":110,"title":{},"body":{"classes/AuthState.html":{}}}],["const",{"_index":100,"title":{},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"index.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{}}}],["constructor(afauth",{"_index":21,"title":{},"body":{"classes/AuthState.html":{}}}],["constructor(data",{"_index":184,"title":{},"body":{"classes/FireAuthUserCreateSuccess.html":{}}}],["constructor(error",{"_index":181,"title":{},"body":{"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserSignedOutFailed.html":{}}}],["constructor(lang",{"_index":299,"title":{},"body":{"classes/UpdateLanguage.html":{}}}],["constructor(publ",{"_index":157,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["constructor(us",{"_index":195,"title":{},"body":{"classes/FireAuthUserSuccess.html":{}}}],["contain",{"_index":283,"title":{},"body":{"classes/LanguageState.html":{}}}],["context",{"_index":281,"title":{},"body":{"classes/LanguageState.html":{}}}],["coverag",{"_index":302,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":162,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["ctx",{"_index":44,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["ctx.dispatch(new",{"_index":95,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["ctx.getstate().lang",{"_index":277,"title":{},"body":{"classes/LanguageState.html":{}}}],["ctx.patchstat",{"_index":103,"title":{},"body":{"classes/AuthState.html":{}}}],["ctx.setstat",{"_index":287,"title":{},"body":{"classes/LanguageState.html":{}}}],["current",{"_index":257,"title":{},"body":{"classes/LanguageState.html":{},"index.html":{}}}],["data",{"_index":112,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"index.html":{}}}],["de",{"_index":221,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["declar",{"_index":246,"title":{},"body":{"modules/FireuserModule.html":{},"overview.html":{}}}],["decor",{"_index":33,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["default",{"_index":80,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"index.html":{}}}],["defaultlanguag",{"_index":145,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"index.html":{}}}],["defin",{"_index":23,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{}}}],["delet",{"_index":171,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["depend",{"_index":323,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":129,"title":{},"body":{"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["deutsch",{"_index":222,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["dispatch",{"_index":270,"title":{},"body":{"classes/LanguageState.html":{}}}],["document",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["e.g",{"_index":359,"title":{},"body":{"index.html":{}}}],["email",{"_index":361,"title":{},"body":{"index.html":{}}}],["en",{"_index":209,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["english",{"_index":220,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["enviro",{"_index":212,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["equal",{"_index":213,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["err",{"_index":114,"title":{},"body":{"classes/AuthState.html":{}}}],["error",{"_index":120,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["es",{"_index":227,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["español",{"_index":228,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["event",{"_index":50,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["event.us",{"_index":123,"title":{},"body":{"classes/AuthState.html":{}}}],["exampl",{"_index":216,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"index.html":{},"overview.html":{}}}],["facebook",{"_index":382,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fail",{"_index":175,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["fals",{"_index":104,"title":{},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"index.html":{}}}],["featur",{"_index":357,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{}}}],["find",{"_index":259,"title":{},"body":{"classes/LanguageState.html":{}}}],["fireauth",{"_index":166,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["fireauthanonymoussignup",{"_index":67,"title":{"classes/FireAuthAnonymousSignUp.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusercheck",{"_index":169,"title":{"classes/FireAuthUserCheck.html":{}},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusercreatefail",{"_index":68,"title":{"classes/FireAuthUserCreateFailed.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusercreatefailed(error",{"_index":121,"title":{},"body":{"classes/AuthState.html":{}}}],["fireauthusercreatesuccess",{"_index":69,"title":{"classes/FireAuthUserCreateSuccess.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusercreatesuccess(data",{"_index":119,"title":{},"body":{"classes/AuthState.html":{}}}],["fireauthuserdelet",{"_index":70,"title":{"classes/FireAuthUserDelete.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthuserfail",{"_index":71,"title":{"classes/FireAuthUserFailed.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusernul",{"_index":72,"title":{"classes/FireAuthUserNull.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusersignedoutfail",{"_index":73,"title":{"classes/FireAuthUserSignedOutFailed.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusersignedoutfailed(err",{"_index":116,"title":{},"body":{"classes/AuthState.html":{}}}],["fireauthusersignedoutsuccess",{"_index":74,"title":{"classes/FireAuthUserSignedOutSuccess.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusersignout",{"_index":75,"title":{"classes/FireAuthUserSignOut.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusersuccess",{"_index":51,"title":{"classes/FireAuthUserSuccess.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["fireauthusersuccess(us",{"_index":96,"title":{},"body":{"classes/AuthState.html":{}}}],["fireauthusertoken",{"_index":76,"title":{"classes/FireAuthUserToken.html":{}},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["firebas",{"_index":64,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["firebase.auth.usercredenti",{"_index":178,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["firebase.firestore().set",{"_index":88,"title":{},"body":{"classes/AuthState.html":{}}}],["firebase.us",{"_index":92,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["firebase/app",{"_index":65,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["firebase/firestor",{"_index":66,"title":{},"body":{"classes/AuthState.html":{}}}],["firebaseconfig",{"_index":211,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["firebaseoptionstoken",{"_index":234,"title":{},"body":{"modules/FireuserModule.html":{}}}],["firestor",{"_index":347,"title":{},"body":{"index.html":{}}}],["fireusermodul",{"_index":200,"title":{"modules/FireuserModule.html":{}},"body":{"modules/FireuserModule.html":{},"index.html":{},"modules.html":{}}}],["fireusermodule.forroot(firebaseconfig",{"_index":205,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["forroot(firebaseconfig",{"_index":249,"title":{},"body":{"modules/FireuserModule.html":{}}}],["fr",{"_index":225,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["françai",{"_index":226,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["get",{"_index":334,"title":{"index.html":{}},"body":{}}],["getlanguag",{"_index":253,"title":{},"body":{"classes/LanguageState.html":{}}}],["getlanguage(st",{"_index":255,"title":{},"body":{"classes/LanguageState.html":{}}}],["getsuitablelanguag",{"_index":254,"title":{},"body":{"classes/LanguageState.html":{}}}],["getus",{"_index":11,"title":{},"body":{"classes/AuthState.html":{}}}],["getuser(st",{"_index":31,"title":{},"body":{"classes/AuthState.html":{}}}],["getuserid",{"_index":12,"title":{},"body":{"classes/AuthState.html":{}}}],["getuserid(st",{"_index":38,"title":{},"body":{"classes/AuthState.html":{}}}],["github",{"_index":380,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["given",{"_index":155,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["googl",{"_index":381,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["graph",{"_index":363,"title":{},"body":{"modules.html":{}}}],["here",{"_index":218,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["identifi",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":153,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["implement",{"_index":6,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["import",{"_index":61,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["init",{"_index":43,"title":{},"body":{"classes/AuthState.html":{}}}],["inject",{"_index":260,"title":{},"body":{"classes/LanguageState.html":{},"coverage.html":{},"overview.html":{}}}],["inject('languageconfig",{"_index":269,"title":{},"body":{"classes/LanguageState.html":{}}}],["innomobile/cor",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["innomobile/fireus",{"_index":208,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["instal",{"_index":342,"title":{},"body":{"index.html":{}}}],["integr",{"_index":358,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":127,"title":{"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{}},"body":{"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":139,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{}}}],["lang",{"_index":142,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["languag",{"_index":137,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"index.html":{}}}],["language.act",{"_index":265,"title":{},"body":{"classes/LanguageState.html":{}}}],["language.model",{"_index":266,"title":{},"body":{"classes/LanguageState.html":{}}}],["languageconfig",{"_index":206,"title":{},"body":{"modules/FireuserModule.html":{},"classes/LanguageState.html":{}}}],["languageconfigmodel",{"_index":144,"title":{"interfaces/LanguageConfigModel.html":{}},"body":{"interfaces/AvailableLanguageModel.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{}}}],["languagest",{"_index":241,"title":{"classes/LanguageState.html":{}},"body":{"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"coverage.html":{},"index.html":{}}}],["languagestatemodel",{"_index":141,"title":{"interfaces/LanguageStateModel.html":{}},"body":{"interfaces/AvailableLanguageModel.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{}}}],["legend",{"_index":366,"title":{},"body":{"overview.html":{}}}],["librari",{"_index":335,"title":{},"body":{"index.html":{}}}],["loader",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":94,"title":{},"body":{"classes/AuthState.html":{}}}],["main",{"_index":337,"title":{},"body":{"index.html":{}}}],["match",{"_index":126,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["mean",{"_index":219,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["method",{"_index":9,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["miscellan",{"_index":373,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["model",{"_index":131,"title":{},"body":{"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{}}}],["modul",{"_index":199,"title":{"modules/FireuserModule.html":{},"modules.html":{}},"body":{"modules/FireuserModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":231,"title":{},"body":{"modules/FireuserModule.html":{}}}],["more",{"_index":217,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSuccess.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"index.html":{}}}],["network",{"_index":378,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["networkvalu",{"_index":376,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":158,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{}}}],["ngmodul",{"_index":230,"title":{},"body":{"modules/FireuserModule.html":{}}}],["ngx",{"_index":130,"title":{},"body":{"interfaces/AuthStateModel.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"dependencies.html":{},"index.html":{}}}],["ngxs/store",{"_index":62,"title":{},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"dependencies.html":{}}}],["ngxsmodul",{"_index":239,"title":{},"body":{"modules/FireuserModule.html":{}}}],["ngxsmodule.forfeatur",{"_index":245,"title":{},"body":{"modules/FireuserModule.html":{}}}],["ngxsoninit",{"_index":7,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["ngxsoninit(ctx",{"_index":40,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["npm",{"_index":343,"title":{},"body":{"index.html":{}}}],["null",{"_index":82,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"index.html":{}}}],["observ",{"_index":263,"title":{},"body":{"classes/LanguageState.html":{}}}],["of(nul",{"_index":354,"title":{},"body":{"index.html":{}}}],["option",{"_index":29,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSuccess.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{}}}],["out",{"_index":97,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"overview.html":{}}}],["output",{"_index":214,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["overview",{"_index":365,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":322,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["param",{"_index":156,"title":{},"body":{"classes/CheckLanguage.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["param1",{"_index":282,"title":{},"body":{"classes/LanguageState.html":{}}}],["paramet",{"_index":25,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSuccess.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"index.html":{}}}],["password",{"_index":362,"title":{},"body":{"index.html":{}}}],["peer",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["portuguê",{"_index":224,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["power",{"_index":341,"title":{},"body":{"index.html":{}}}],["privat",{"_index":87,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["properti",{"_index":132,"title":{},"body":{"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{}}}],["provid",{"_index":250,"title":{},"body":{"modules/FireuserModule.html":{},"overview.html":{}}}],["pt",{"_index":223,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["public",{"_index":180,"title":{},"body":{"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSuccess.html":{},"modules/FireuserModule.html":{},"classes/UpdateLanguage.html":{}}}],["readm",{"_index":201,"title":{},"body":{"modules/FireuserModule.html":{}}}],["readonli",{"_index":154,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["reset",{"_index":369,"title":{},"body":{"overview.html":{}}}],["result",{"_index":125,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":37,"title":{},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"index.html":{}}}],["ru",{"_index":229,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["rxj",{"_index":264,"title":{},"body":{"classes/LanguageState.html":{},"dependencies.html":{}}}],["save",{"_index":276,"title":{},"body":{"classes/LanguageState.html":{},"index.html":{}}}],["selector",{"_index":34,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["setuserstatenul",{"_index":13,"title":{},"body":{"classes/AuthState.html":{}}}],["setuserstatenull(ctx",{"_index":46,"title":{},"body":{"classes/AuthState.html":{}}}],["setuserstateonsuccess",{"_index":14,"title":{},"body":{"classes/AuthState.html":{}}}],["setuserstateonsuccess(ctx",{"_index":49,"title":{},"body":{"classes/AuthState.html":{}}}],["sign",{"_index":111,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["signin",{"_index":379,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["signout",{"_index":16,"title":{},"body":{"classes/AuthState.html":{}}}],["signout(ctx",{"_index":53,"title":{},"body":{"classes/AuthState.html":{}}}],["signup",{"_index":167,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"miscellaneous/typealiases.html":{}}}],["signupanonym",{"_index":17,"title":{},"body":{"classes/AuthState.html":{}}}],["signupanonymous(ctx",{"_index":55,"title":{},"body":{"classes/AuthState.html":{}}}],["some((x",{"_index":297,"title":{},"body":{"classes/LanguageState.html":{}}}],["someth",{"_index":356,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["src/.../auth.service.t",{"_index":377,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/fireuser.module.t",{"_index":202,"title":{},"body":{"modules/FireuserModule.html":{}}}],["src/lib/services/auth.service.t",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/auth/auth.actions.t",{"_index":161,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"coverage.html":{}}}],["src/lib/store/auth/auth.actions.ts:10",{"_index":179,"title":{},"body":{"classes/FireAuthUserCheck.html":{}}}],["src/lib/store/auth/auth.actions.ts:17",{"_index":198,"title":{},"body":{"classes/FireAuthUserToken.html":{}}}],["src/lib/store/auth/auth.actions.ts:24",{"_index":187,"title":{},"body":{"classes/FireAuthUserDelete.html":{}}}],["src/lib/store/auth/auth.actions.ts:31",{"_index":191,"title":{},"body":{"classes/FireAuthUserSignOut.html":{}}}],["src/lib/store/auth/auth.actions.ts:38",{"_index":164,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{}}}],["src/lib/store/auth/auth.actions.ts:49",{"_index":196,"title":{},"body":{"classes/FireAuthUserSuccess.html":{}}}],["src/lib/store/auth/auth.actions.ts:50",{"_index":197,"title":{},"body":{"classes/FireAuthUserSuccess.html":{}}}],["src/lib/store/auth/auth.actions.ts:57",{"_index":190,"title":{},"body":{"classes/FireAuthUserNull.html":{}}}],["src/lib/store/auth/auth.actions.ts:64",{"_index":188,"title":{},"body":{"classes/FireAuthUserFailed.html":{}}}],["src/lib/store/auth/auth.actions.ts:65",{"_index":189,"title":{},"body":{"classes/FireAuthUserFailed.html":{}}}],["src/lib/store/auth/auth.actions.ts:72",{"_index":194,"title":{},"body":{"classes/FireAuthUserSignedOutSuccess.html":{}}}],["src/lib/store/auth/auth.actions.ts:80",{"_index":192,"title":{},"body":{"classes/FireAuthUserSignedOutFailed.html":{}}}],["src/lib/store/auth/auth.actions.ts:81",{"_index":193,"title":{},"body":{"classes/FireAuthUserSignedOutFailed.html":{}}}],["src/lib/store/auth/auth.actions.ts:88",{"_index":185,"title":{},"body":{"classes/FireAuthUserCreateSuccess.html":{}}}],["src/lib/store/auth/auth.actions.ts:89",{"_index":186,"title":{},"body":{"classes/FireAuthUserCreateSuccess.html":{}}}],["src/lib/store/auth/auth.actions.ts:96",{"_index":182,"title":{},"body":{"classes/FireAuthUserCreateFailed.html":{}}}],["src/lib/store/auth/auth.actions.ts:97",{"_index":183,"title":{},"body":{"classes/FireAuthUserCreateFailed.html":{}}}],["src/lib/store/auth/auth.model.t",{"_index":128,"title":{},"body":{"interfaces/AuthStateModel.html":{},"coverage.html":{}}}],["src/lib/store/auth/auth.state.t",{"_index":5,"title":{},"body":{"classes/AuthState.html":{},"coverage.html":{}}}],["src/lib/store/auth/auth.state.ts:103",{"_index":56,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:117",{"_index":52,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:124",{"_index":48,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:32",{"_index":35,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:37",{"_index":39,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:42",{"_index":24,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:53",{"_index":42,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:72",{"_index":59,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:83",{"_index":57,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:91",{"_index":54,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/language/language.actions.t",{"_index":148,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{}}}],["src/lib/store/language/language.actions.ts:14",{"_index":301,"title":{},"body":{"classes/UpdateLanguage.html":{}}}],["src/lib/store/language/language.actions.ts:8",{"_index":300,"title":{},"body":{"classes/UpdateLanguage.html":{}}}],["src/lib/store/language/language.model.t",{"_index":135,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{},"interfaces/LanguageConfigModel.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{}}}],["src/lib/store/language/language.model.ts:21",{"_index":140,"title":{},"body":{"interfaces/AvailableLanguageModel.html":{}}}],["src/lib/store/language/language.state.t",{"_index":252,"title":{},"body":{"classes/LanguageState.html":{},"coverage.html":{}}}],["src/lib/store/language/language.state.ts:24",{"_index":256,"title":{},"body":{"classes/LanguageState.html":{}}}],["src/lib/store/language/language.state.ts:87",{"_index":258,"title":{},"body":{"classes/LanguageState.html":{}}}],["start",{"_index":272,"title":{"index.html":{}},"body":{"classes/LanguageState.html":{}}}],["state",{"_index":36,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{}}}],["state.authus",{"_index":85,"title":{},"body":{"classes/AuthState.html":{}}}],["state.authuser.uid",{"_index":86,"title":{},"body":{"classes/AuthState.html":{}}}],["state.lang",{"_index":267,"title":{},"body":{"classes/LanguageState.html":{}}}],["statecontext",{"_index":41,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["statement",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":10,"title":{},"body":{"classes/AuthState.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["store/auth/auth.st",{"_index":240,"title":{},"body":{"modules/FireuserModule.html":{}}}],["store/language/language.model",{"_index":243,"title":{},"body":{"modules/FireuserModule.html":{}}}],["store/language/language.st",{"_index":242,"title":{},"body":{"modules/FireuserModule.html":{}}}],["string",{"_index":133,"title":{},"body":{"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["subscribe((data",{"_index":355,"title":{},"body":{"index.html":{}}}],["substring(0",{"_index":293,"title":{},"body":{"classes/LanguageState.html":{}}}],["success",{"_index":172,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["successfulli",{"_index":177,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["support",{"_index":248,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["switchmap",{"_index":346,"title":{},"body":{"index.html":{}}}],["switchmap(us",{"_index":349,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":338,"title":{},"body":{"index.html":{}}}],["this.afauth.auth.currentus",{"_index":99,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.auth.currentuser.delet",{"_index":106,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.auth.currentuser.getidtoken",{"_index":102,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.auth.signinanonym",{"_index":118,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.auth.signout",{"_index":109,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.authstate.subscribe((us",{"_index":91,"title":{},"body":{"classes/AuthState.html":{}}}],["this.fs.doc(`${this.userspath}/${user.uid",{"_index":352,"title":{},"body":{"index.html":{}}}],["this.getsuitablelanguag",{"_index":279,"title":{},"body":{"classes/LanguageState.html":{}}}],["this.languageconfig.availablelanguag",{"_index":296,"title":{},"body":{"classes/LanguageState.html":{}}}],["this.languageconfig.defaultlanguag",{"_index":295,"title":{},"body":{"classes/LanguageState.html":{}}}],["this.store.select(authstate.getuser).pip",{"_index":348,"title":{},"body":{"index.html":{}}}],["this.translate.getbrowserlang",{"_index":292,"title":{},"body":{"classes/LanguageState.html":{}}}],["this.translate.setdefaultlang(this.languageconfig.defaultlanguag",{"_index":273,"title":{},"body":{"classes/LanguageState.html":{}}}],["this.translate.use(ctx.getstate().lang",{"_index":290,"title":{},"body":{"classes/LanguageState.html":{}}}],["this.userref",{"_index":351,"title":{},"body":{"index.html":{}}}],["this.userref.valuechang",{"_index":353,"title":{},"body":{"index.html":{}}}],["timestampsinsnapshot",{"_index":89,"title":{},"body":{"classes/AuthState.html":{}}}],["tip",{"_index":210,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["token",{"_index":83,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["translat",{"_index":268,"title":{},"body":{"classes/LanguageState.html":{},"index.html":{}}}],["translate/cor",{"_index":262,"title":{},"body":{"classes/LanguageState.html":{},"dependencies.html":{}}}],["translate/http",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["translateservic",{"_index":261,"title":{},"body":{"classes/LanguageState.html":{}}}],["tri",{"_index":108,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["true",{"_index":90,"title":{},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"classes/LanguageState.html":{},"index.html":{}}}],["twitter",{"_index":383,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["two",{"_index":336,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"interfaces/AvailableLanguageModel.html":{},"classes/CheckLanguage.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"interfaces/LanguageConfigModel.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":374,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["updat",{"_index":151,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{}}}],["updatelanguag",{"_index":152,"title":{"classes/UpdateLanguage.html":{}},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{}}}],["updatelanguage(ctx",{"_index":286,"title":{},"body":{"classes/LanguageState.html":{}}}],["updatelanguage(languag",{"_index":280,"title":{},"body":{"classes/LanguageState.html":{}}}],["updatelanguage(sav",{"_index":278,"title":{},"body":{"classes/LanguageState.html":{}}}],["upgrad",{"_index":360,"title":{},"body":{"index.html":{}}}],["us",{"_index":159,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"index.html":{}}}],["uselanguag",{"_index":160,"title":{"classes/UseLanguage.html":{}},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UseLanguage.html":{},"coverage.html":{}}}],["uselanguage(ctx",{"_index":289,"title":{},"body":{"classes/LanguageState.html":{}}}],["user",{"_index":93,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{},"index.html":{}}}],["userdelet",{"_index":18,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["userfail",{"_index":176,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["usernul",{"_index":174,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["usersuccess",{"_index":173,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["usertoken",{"_index":19,"title":{},"body":{"classes/AuthState.html":{},"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["usertoken(ctx",{"_index":58,"title":{},"body":{"classes/AuthState.html":{}}}],["usevalu",{"_index":251,"title":{},"body":{"modules/FireuserModule.html":{}}}],["valu",{"_index":165,"title":{},"body":{"classes/FireAuthAnonymousSignUp.html":{},"classes/FireAuthUserCheck.html":{},"classes/FireAuthUserCreateFailed.html":{},"classes/FireAuthUserCreateSuccess.html":{},"classes/FireAuthUserDelete.html":{},"classes/FireAuthUserFailed.html":{},"classes/FireAuthUserNull.html":{},"classes/FireAuthUserSignOut.html":{},"classes/FireAuthUserSignedOutFailed.html":{},"classes/FireAuthUserSignedOutSuccess.html":{},"classes/FireAuthUserSuccess.html":{},"classes/FireAuthUserToken.html":{}}}],["via",{"_index":204,"title":{},"body":{"modules/FireuserModule.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/AuthState.html":{}}}],["web",{"_index":215,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["x.code",{"_index":298,"title":{},"body":{"classes/LanguageState.html":{}}}],["zoom",{"_index":368,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AuthState.html":{"url":"classes/AuthState.html","title":"class - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getUser\n                            \n                            \n                                    Static\n                                getUserId\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                setUserStateNull\n                            \n                            \n                                setUserStateOnSuccess\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Async\n                                signUpAnonymous\n                            \n                            \n                                    Async\n                                userDelete\n                            \n                            \n                                    Async\n                                userToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.state.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser(state: AuthStateModel)\n                    \n                \n\n                    \n                        \n                            Decorators : @Selector() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:32\n                            \n                        \n\n\n                \n                    \n                            Selectors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    AuthStateModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getUserId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserId(state: AuthStateModel)\n                    \n                \n\n                    \n                        \n                            Decorators : @Selector() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    AuthStateModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxsOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngxsOnInit(ctx: StateContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:53\n                            \n                        \n\n\n                \n                    \n                            Init\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUserStateNull\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUserStateNull(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : @Action() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUserStateOnSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUserStateOnSuccess(ctx: StateContext, event: FireAuthUserSuccess)\n                    \n                \n\n                    \n                        \n                            Decorators : @Action() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:117\n                            \n                        \n\n\n                \n                    \n                            Events\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    FireAuthUserSuccess\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : @Action() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            signUpAnonymous\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signUpAnonymous(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : @Action() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            userDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userDelete()\n                    \n                \n\n                    \n                        \n                            Decorators : @Action() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            userToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userToken(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : @Action() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:72\n                            \n                        \n\n\n                \n                    \n                            Commands\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action, NgxsOnInit, Selector, State, StateContext } from '@ngxs/store';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport {\n    FireAuthAnonymousSignUp,\n    FireAuthUserCreateFailed,\n    FireAuthUserCreateSuccess,\n    FireAuthUserDelete,\n    FireAuthUserFailed,\n    FireAuthUserNull,\n    FireAuthUserSignedOutFailed,\n    FireAuthUserSignedOutSuccess,\n    FireAuthUserSignOut,\n    FireAuthUserSuccess,\n    FireAuthUserToken\n} from './auth.actions';\nimport { AuthStateModel } from './auth.model';\n\n@State({\n    name: 'auth',\n    defaults: {\n        authUser: null,\n        token: null\n    }\n})\nexport class AuthState implements NgxsOnInit {\n    /**\n     * Selectors\n     */\n    @Selector()\n    static getUser(state: AuthStateModel) {\n        return state.authUser;\n    }\n\n    @Selector()\n    static getUserId(state: AuthStateModel) {\n        if (state.authUser && state.authUser.uid) {\n            return state.authUser.uid;\n        }\n        return null;\n    }\n\n    constructor(\n        private afAuth: AngularFireAuth\n    ) {\n        firebase.firestore().settings({ timestampsInSnapshots: true });\n    }\n\n    /**\n     * Init\n     */\n    ngxsOnInit(ctx: StateContext) {\n        this.afAuth.authState.subscribe((user: firebase.User) => {\n            if (user) {\n                // User is logged in\n                ctx.dispatch(new FireAuthUserToken());\n                ctx.dispatch(new FireAuthUserSuccess(user));\n            } else {\n                // User is logged out\n                ctx.dispatch(new FireAuthUserNull());\n            }\n        });\n    }\n\n    /**\n     * Commands\n     */\n\n\n    @Action(FireAuthUserToken)\n    async userToken(ctx: StateContext) {\n        if (this.afAuth.auth.currentUser) {\n            const token = await this.afAuth.auth.currentUser.getIdToken();\n            return ctx.patchState({\n                token: token\n            });\n        }\n        return false;\n    }\n\n    @Action(FireAuthUserDelete)\n    async userDelete() {\n        if (this.afAuth.auth.currentUser) {\n            return await this.afAuth.auth.currentUser.delete();\n        }\n        return false;\n    }\n\n    @Action(FireAuthUserSignOut)\n    async signOut(ctx: StateContext) {\n        try {\n            await this.afAuth.auth.signOut();\n            // console.log('User Sign Out', data);\n            return ctx.dispatch(new FireAuthUserSignedOutSuccess());\n        } catch (err) {\n            // console.log('Error', err);\n            return ctx.dispatch(new FireAuthUserSignedOutFailed(err));\n        }\n    }\n\n    @Action(FireAuthAnonymousSignUp)\n    async signUpAnonymous(ctx: StateContext) {\n        try {\n            const data = await this.afAuth.auth.signInAnonymously();\n            return ctx.dispatch(new FireAuthUserCreateSuccess(data));\n        } catch (error) {\n            return ctx.dispatch(new FireAuthUserCreateFailed(error));\n        }\n    }\n\n    /**\n     * Events\n     */\n\n    @Action(FireAuthUserSuccess)\n    setUserStateOnSuccess(ctx: StateContext, event: FireAuthUserSuccess) {\n        return ctx.patchState({\n            authUser: event.user\n        });\n    }\n\n    @Action([FireAuthUserNull, FireAuthUserFailed])\n    setUserStateNull(ctx: StateContext) {\n        return ctx.patchState({\n            authUser: null,\n            token: null\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthStateModel.html":{"url":"interfaces/AuthStateModel.html","title":"interface - AuthStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.model.ts\n        \n\n            \n                Description\n            \n            \n                NGXS Auth state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        authUser\n                                \n                                \n                                            Optional\n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authUser\n                                    \n                                \n                                \n                                    \n                                        authUser:     firebase.User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     firebase.User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n/**\n * NGXS Auth state model\n */\nexport interface AuthStateModel {\n  authUser?: firebase.User;\n  token?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AvailableLanguageModel.html":{"url":"interfaces/AvailableLanguageModel.html","title":"interface - AvailableLanguageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AvailableLanguageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for available languages\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/language/language.model.ts:21\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LanguageStateModel {\n    lang: string;\n}\n\n/**\n * Config for language\n */\nexport interface LanguageConfigModel {\n    defaultLanguage: string;\n    availableLanguages: AvailableLanguageModel[];\n}\n\n/**\n * Model for available languages\n */\nexport interface AvailableLanguageModel {\n    code: string;\n    name: string;\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckLanguage.html":{"url":"classes/CheckLanguage.html","title":"class - CheckLanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckLanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.actions.ts\n        \n\n            \n                Description\n            \n            \n                Checks the language of the browser and updates the language\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Update';\n\n    /**\n     * Update language to the given code\n     * @param lang Language Code\n     */\n    constructor(public lang: string) { }\n}\n\n/**\n * Checks the language of the browser and updates the language\n */\nexport class CheckLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Check';\n}\n\n/**\n * After updating the language the new language should be used\n */\nexport class UseLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Use';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthAnonymousSignUp.html":{"url":"classes/FireAuthAnonymousSignUp.html","title":"class - FireAuthAnonymousSignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthAnonymousSignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                Create a new Firebase user account\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:38\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] Signup anonymous'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserCheck.html":{"url":"classes/FireAuthUserCheck.html","title":"class - FireAuthUserCheck","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserCheck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                Checks the Firebase Auth user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] CheckUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserCreateFailed.html":{"url":"classes/FireAuthUserCreateFailed.html","title":"class - FireAuthUserCreateFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserCreateFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                EVENT: Creating a new Firebase user failed\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] User Created FAILED'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:96\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserCreateSuccess.html":{"url":"classes/FireAuthUserCreateSuccess.html","title":"class - FireAuthUserCreateSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserCreateSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                EVENT: Created a new Firebase user successfully\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: firebase.auth.UserCredential)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    firebase.auth.UserCredential\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     firebase.auth.UserCredential\n\n                    \n                \n                    \n                        \n                            Type :     firebase.auth.UserCredential\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] User Created successfully'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:88\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserDelete.html":{"url":"classes/FireAuthUserDelete.html","title":"class - FireAuthUserDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                Delete a firebase user account\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] UserDelete'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserFailed.html":{"url":"classes/FireAuthUserFailed.html","title":"class - FireAuthUserFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                EVENT: Firebase User failed\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] UserFailed'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserNull.html":{"url":"classes/FireAuthUserNull.html","title":"class - FireAuthUserNull","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserNull\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                EVENT: No Firebase auth user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] UserNull'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserSignOut.html":{"url":"classes/FireAuthUserSignOut.html","title":"class - FireAuthUserSignOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserSignOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                Sign out from a Firebase user account\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] Sign out'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserSignedOutFailed.html":{"url":"classes/FireAuthUserSignedOutFailed.html","title":"class - FireAuthUserSignedOutFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserSignedOutFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                EVENT: Sign out failed\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] User sign out failed'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserSignedOutSuccess.html":{"url":"classes/FireAuthUserSignedOutSuccess.html","title":"class - FireAuthUserSignedOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserSignedOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                EVENT: Sign out was successful\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:72\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] User successfully signed out'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserSuccess.html":{"url":"classes/FireAuthUserSuccess.html","title":"class - FireAuthUserSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                EVENT: Get the Firebase auth user successful\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: firebase.User)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    firebase.User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] UserSuccess'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     firebase.User\n\n                    \n                \n                    \n                        \n                            Type :     firebase.User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FireAuthUserToken.html":{"url":"classes/FireAuthUserToken.html","title":"class - FireAuthUserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FireAuthUserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                Get the token of the Firebase user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[FireAuth] UserToken'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\n\n\n/* ACTIONS */\n\n/**\n * Checks the Firebase Auth user\n */\nexport class FireAuthUserCheck {\n  static type = '[FireAuth] CheckUser';\n}\n\n/**\n * Get the token of the Firebase user\n */\nexport class FireAuthUserToken {\n  static type = '[FireAuth] UserToken';\n}\n\n/**\n * Delete a firebase user account\n */\nexport class FireAuthUserDelete {\n  static type = '[FireAuth] UserDelete';\n}\n\n/**\n * Sign out from a Firebase user account\n */\nexport class FireAuthUserSignOut {\n  static type = '[FireAuth] Sign out';\n}\n\n/**\n * Create a new Firebase user account\n */\nexport class FireAuthAnonymousSignUp {\n  static type = '[FireAuth] Signup anonymous';\n  constructor() { }\n}\n\n\n/* EVENTS */\n\n/**\n * EVENT: Get the Firebase auth user successful\n */\nexport class FireAuthUserSuccess {\n  static type = '[FireAuth] UserSuccess';\n  constructor(public user: firebase.User) { }\n}\n\n/**\n * EVENT: No Firebase auth user\n */\nexport class FireAuthUserNull {\n  static type = '[FireAuth] UserNull';\n}\n\n/**\n * EVENT: Firebase User failed\n */\nexport class FireAuthUserFailed {\n  static type = '[FireAuth] UserFailed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Sign out was successful\n */\nexport class FireAuthUserSignedOutSuccess {\n  static type = '[FireAuth] User successfully signed out';\n  constructor() { }\n}\n\n/**\n * EVENT: Sign out failed\n */\nexport class FireAuthUserSignedOutFailed {\n  static type = '[FireAuth] User sign out failed';\n  constructor(public error: any) { }\n}\n\n/**\n * EVENT: Created a new Firebase user successfully\n */\nexport class FireAuthUserCreateSuccess {\n  static type = '[FireAuth] User Created successfully';\n  constructor(public data: firebase.auth.UserCredential) { }\n}\n\n/**\n * EVENT: Creating a new Firebase user failed\n */\nexport class FireAuthUserCreateFailed {\n  static type = '[FireAuth] User Created FAILED';\n  constructor(public error: any) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FireuserModule.html":{"url":"modules/FireuserModule.html","title":"module - FireuserModule","body":"\n                   \n\n\n\n\n  Modules\n  FireuserModule\n\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/fireuser.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Add this module via FireuserModule.forRoot(firebaseConfig, languageConfig) to your app.module.ts\n\n            \n        \n\n        \n            \n            \n        \n    \n\n    \n        Add this module to your app.module.ts\n    import { FireuserModule } from '@innomobile/fireuser';\n\n    FireuserModule.forRoot(firebaseConfig, {\n        defaultLanguage: 'en',\n        availableLanguages: availableLanguages\n    }),Tip: Add firebaseConfig to your enviroment (firebaseConfig is equal to the output of Firebase Web)\nExample for availableLanguages (you can add more parameters here like available: true | false which has no meaning by default )\n    export const availableLanguages = [\n        {\n            code: 'en',\n            name: 'English',\n            available: true\n        },\n        {\n            code: 'de',\n            name: 'Deutsch',\n            available: true\n        },\n        {\n            code: 'pt',\n            name: 'Português',\n            available: false\n        },\n        {\n            code: 'fr',\n            name: 'Français',\n            available: false\n        },\n        {\n            code: 'es',\n            name: 'Español',\n            available: false\n        },\n        {\n            code: 'ru',\n            name: 'Русский',\n            available: false\n        }\n    ];\n    \n\n    \n        \nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\n// Firebase\nimport { AngularFireModule, FirebaseOptionsToken } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\n// Ngxs\nimport { NgxsModule } from '@ngxs/store';\nimport { AuthState } from './store/auth/auth.state';\nimport { LanguageState } from './store/language/language.state';\nimport { LanguageConfigModel } from './store/language/language.model';\n\n/**\n * Add this module via FireuserModule.forRoot(firebaseConfig, languageConfig) to your app.module.ts\n */\n@NgModule({\n  imports: [\n    AngularFireModule,\n    AngularFireAuthModule,\n    AngularFirestoreModule.enablePersistence(),\n    NgxsModule.forFeature([\n      AuthState,\n      LanguageState\n    ])\n  ],\n  declarations: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class FireuserModule {\n\n  /**\n   * Add this to your app module\n   * @param firebaseConfig Firebase Config\n   * @param languageConfig Which languages should be supported\n   */\n  public static forRoot(firebaseConfig, languageConfig: LanguageConfigModel): ModuleWithProviders {\n    return {\n      ngModule: FireuserModule,\n      providers: [\n        { provide: FirebaseOptionsToken, useValue: firebaseConfig },\n        { provide: 'languageConfig', useValue: languageConfig }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LanguageConfigModel.html":{"url":"interfaces/LanguageConfigModel.html","title":"interface - LanguageConfigModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LanguageConfigModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.model.ts\n        \n\n            \n                Description\n            \n            \n                Config for language\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        availableLanguages\n                                \n                                \n                                        defaultLanguage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableLanguages\n                                    \n                                \n                                \n                                    \n                                        availableLanguages:     AvailableLanguageModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AvailableLanguageModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultLanguage\n                                    \n                                \n                                \n                                    \n                                        defaultLanguage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LanguageStateModel {\n    lang: string;\n}\n\n/**\n * Config for language\n */\nexport interface LanguageConfigModel {\n    defaultLanguage: string;\n    availableLanguages: AvailableLanguageModel[];\n}\n\n/**\n * Model for available languages\n */\nexport interface AvailableLanguageModel {\n    code: string;\n    name: string;\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LanguageState.html":{"url":"classes/LanguageState.html","title":"class - LanguageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LanguageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.state.ts\n        \n\n            \n                Description\n            \n            \n                Language State @ NGXS\n\n            \n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getLanguage\n                            \n                            \n                                    Private\n                                getSuitableLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLanguage(state: LanguageStateModel)\n                    \n                \n\n                    \n                        \n                            Decorators : @Selector() \n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/language/language.state.ts:24\n                            \n                        \n\n\n                \n                    \n                            Get the current language code\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    LanguageStateModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Language state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getSuitableLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSuitableLanguage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/store/language/language.state.ts:87\n                            \n                        \n\n\n                \n                    \n                            Try to find the language from browser and returns the language\nif language is available or the defaultLanguage\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Action, NgxsOnInit, Selector, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { CheckLanguage, UpdateLanguage, UseLanguage } from './language.actions';\nimport { LanguageConfigModel, LanguageStateModel } from './language.model';\n\n/**\n * Language State @ NGXS\n */\n@State({\n    name: 'language',\n    defaults: {\n        lang: null\n    }\n})\nexport class LanguageState implements NgxsOnInit {\n\n    /**\n     * Get the current language code\n     * @param state Language state\n     */\n    @Selector()\n    static getLanguage(state: LanguageStateModel) {\n        return state.lang;\n    }\n\n    /**\n     * @ignore\n     */\n    constructor(\n        private translate: TranslateService,\n        @Inject('languageConfig') private languageConfig: LanguageConfigModel\n    ) { }\n\n    /**\n     * Dispatch CheckSession on start\n     * @ignore\n     */\n    ngxsOnInit(ctx: StateContext) {\n        this.translate.setDefaultLang(this.languageConfig.defaultLanguage);\n        ctx.dispatch(new CheckLanguage());\n    }\n\n    /**\n     * Checks the current language\n     * @ignore\n     */\n    @Action(CheckLanguage)\n    checkLanguage(ctx: StateContext) {\n        const saved = ctx.getState().lang;\n        if (saved) {\n            ctx.dispatch(new UpdateLanguage(saved));\n        } else {\n            const language = this.getSuitableLanguage();\n            ctx.dispatch(new UpdateLanguage(language));\n        }\n    }\n\n    /**\n     * Update to given language\n     * @param ctx State Context\n     * @param param1 Contains the language\n     * @ignore\n     */\n    @Action(UpdateLanguage, { cancelUncompleted: true })\n    async updateLanguage(ctx: StateContext, { lang }: UpdateLanguage) {\n        ctx.setState({ lang: lang });\n        ctx.dispatch(new UseLanguage());\n    }\n\n    /**\n     * Use the language\n     * @param ctx State Context\n     * @ignore\n     */\n    @Action(UseLanguage, { cancelUncompleted: true })\n    useLanguage(ctx: StateContext): Observable {\n        return this.translate.use(ctx.getState().lang);\n    }\n\n\n    /**\n     * Try to find the language from browser and returns the language\n     * if language is available or the defaultLanguage\n     */\n    private getSuitableLanguage() {\n        const browserLanguage: string = this.translate.getBrowserLang()\n            .substring(0, 2).toLowerCase() || this.languageConfig.defaultLanguage;\n        return this.languageConfig.availableLanguages\n            .some((x: any) => x.code === browserLanguage)\n            ? browserLanguage\n            : this.languageConfig.defaultLanguage;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LanguageStateModel.html":{"url":"interfaces/LanguageStateModel.html","title":"interface - LanguageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LanguageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for the NGXS Language State\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lang\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LanguageStateModel {\n    lang: string;\n}\n\n/**\n * Config for language\n */\nexport interface LanguageConfigModel {\n    defaultLanguage: string;\n    availableLanguages: AvailableLanguageModel[];\n}\n\n/**\n * Model for available languages\n */\nexport interface AvailableLanguageModel {\n    code: string;\n    name: string;\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLanguage.html":{"url":"classes/UpdateLanguage.html","title":"class - UpdateLanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.actions.ts\n        \n\n            \n                Description\n            \n            \n                Updates the state to the given language\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lang\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lang: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/language/language.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Update language to the given code\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Language Code\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lang:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/language/language.actions.ts:14\n                            \n                        \n\n                \n                    \n                        Language Code\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Update';\n\n    /**\n     * Update language to the given code\n     * @param lang Language Code\n     */\n    constructor(public lang: string) { }\n}\n\n/**\n * Checks the language of the browser and updates the language\n */\nexport class CheckLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Check';\n}\n\n/**\n * After updating the language the new language should be used\n */\nexport class UseLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Use';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UseLanguage.html":{"url":"classes/UseLanguage.html","title":"class - UseLanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UseLanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.actions.ts\n        \n\n            \n                Description\n            \n            \n                After updating the language the new language should be used\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Update';\n\n    /**\n     * Update language to the given code\n     * @param lang Language Code\n     */\n    constructor(public lang: string) { }\n}\n\n/**\n * Checks the language of the browser and updates the language\n */\nexport class CheckLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Check';\n}\n\n/**\n * After updating the language the new language should be used\n */\nexport class UseLanguage {\n    /**\n     * @ignore\n     */\n    static readonly type = '[LANGUAGE] Use';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthAnonymousSignUp\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserCheck\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserCreateFailed\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserCreateSuccess\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserDelete\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserFailed\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserNull\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserSignOut\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserSignedOutFailed\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserSignedOutSuccess\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserSuccess\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                FireAuthUserToken\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.model.ts\n            \n            \n                interface\n            \n            \n                AuthStateModel\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/store/auth/auth.state.ts\n            \n            \n                class\n            \n            \n                AuthState\n            \n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/lib/store/language/language.actions.ts\n            \n            \n                class\n            \n            \n                CheckLanguage\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/store/language/language.actions.ts\n            \n            \n                class\n            \n            \n                UpdateLanguage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/store/language/language.actions.ts\n            \n            \n                class\n            \n            \n                UseLanguage\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/store/language/language.model.ts\n            \n            \n                interface\n            \n            \n                AvailableLanguageModel\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/store/language/language.model.ts\n            \n            \n                interface\n            \n            \n                LanguageConfigModel\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/store/language/language.model.ts\n            \n            \n                interface\n            \n            \n                LanguageStateModel\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/store/language/language.state.ts\n            \n            \n                class\n            \n            \n                LanguageState\n            \n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.0\n        \n            @ngx-translate/http-loader : ^3.0.0\n        \n            @ngxs/store : ^3.0.0\n        \n            @innomobile/core : ^1.0.0\n        \n            @angular/fire : ^5.0.0\n        \n            firebase : ^5.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@innomobile/fireuser - Firebase, NGXS, Language, AuthState\nThis library has two main tasks:\n\nGet the Authentification from Firebase and get the current authenticated user\nAdd language support powered by @ngx-translate and save the current language in LanguageState powered by NGXS\n\nInstallation\nInstall the package:\nnpm i @innomobile/fireuser\nAdd to your app.module\n    import { FireuserModule } from '@innomobile/fireuser';\n\n    FireuserModule.forRoot(firebaseConfig, {\n        defaultLanguage: 'en',\n        availableLanguages: availableLanguages\n    }),Tip: Add firebaseConfig to your enviroment (firebaseConfig is equal to the output of Firebase Web)\nExample for availableLanguages (you can add more parameters here like available: true | false which has no meaning by default )\n    export const availableLanguages = [\n        {\n            code: 'en',\n            name: 'English',\n            available: true\n        },\n        {\n            code: 'de',\n            name: 'Deutsch',\n            available: true\n        },\n        {\n            code: 'pt',\n            name: 'Português',\n            available: false\n        },\n        {\n            code: 'fr',\n            name: 'Français',\n            available: false\n        },\n        {\n            code: 'es',\n            name: 'Español',\n            available: false\n        },\n        {\n            code: 'ru',\n            name: 'Русский',\n            available: false\n        }\n    ];Use Cases\nUsing the NGXS AuthState\nYou can use a switchMap to get the authenticated user and get user data from firestore\n    this.store.select(AuthState.getUser).pipe(\n        switchMap(user => {\n            // console.log('AuthUser', user);\n\n            if (user) {\n                this.userRef = this.fs.doc(`${this.usersPath}/${user.uid}`);\n                return this.userRef.valueChanges();\n            } else {\n                this.userRef = null;\n                return of(null);\n            }\n        })\n    ).subscribe((data) => {\n        if (data) {\n            // Do something with the data\n        } else if (!data && this.userRef) {\n            // Currently no data at Firestore, but the user is authenticated\n        }\n    });Using the AuthService\nCurrently not all features are integrated at NGXS as actions, so you have to use the AuthService, e.g. to upgrade a user with Email and Password!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FireuserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NetworkValue   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/auth.service.ts\n    \n        \n            \n                \n                    \n                        \n                        NetworkValue\n                    \n                \n                    \n                        \n                            Networks for Firebase Signin and Signup \n\n                        \n                    \n                \n                    \n                        NetworkValue:     \"github\" | \"google\" | \"facebook\" | \"twitter\"\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
