var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/modules/AuthModule.html",[0,1.141,1,1.287]],["body/modules/AuthModule.html",[0,1.677,1,2.451,2,1.622,3,1.849,4,2.732,5,2.134,6,1.849,7,0.388,8,2.516,9,2.516,10,2.516,11,2.919,12,0.046,13,2.817,14,2.134,15,0.786,16,0.31,17,0.31,18,0.247,19,3.095,20,0.731,21,2.817,22,1.27,23,4.085,24,2.516,25,0.889,26,2.134,27,3.095,28,4.085,29,1.432,30,1.849,31,0.226,32,0.033,33,0.033]],["title/classes/AuthState.html",[31,0.203,34,1.457]],["body/classes/AuthState.html",[7,0.104,12,0.047,15,0.543,16,0.13,17,0.13,18,0.104,20,0.598,25,0.374,31,0.156,32,0.017,33,0.017,34,1.121,35,1.058,36,1.278,37,2.404,38,0.13,39,1.475,40,0.906,41,2.404,42,3.486,43,0.46,44,2.139,45,2.139,46,2.139,47,2.955,48,3.155,49,0.782,50,0.906,51,0.602,52,1.301,53,3.155,54,0.985,55,1.301,56,2.168,57,1.388,58,0.503,59,1.915,60,2.139,61,2.139,62,3.48,63,3.22,64,1.138,65,1.301,66,2.139,67,2.585,68,2.175,69,2.724,70,1.301,71,2.139,72,2.176,73,2.139,74,1.885,75,2.083,76,1.301,77,1.879,78,1.475,79,1.301,80,2.139,81,2.139,82,1.301,83,2.139,84,1.271,85,0.906,86,1.301,87,1.301,88,2.139,89,1.301,90,2.139,91,1.301,92,0.898,93,0.291,94,0.422,95,1.301,96,0.602,97,1.301,98,1.301,99,0.614,100,0.614,101,0.374,102,1.301,103,1.301,104,1.058,105,0.291,106,2.214,107,2.176,108,2.834,109,1.301,110,0.898,111,1.301,112,1.301,113,2.139,114,1.301,115,2.176,116,1.301,117,1.301,118,1.301,119,0.422,120,0.993,121,2.139,122,1.301,123,1.301,124,2.139,125,1.475,126,1.879,127,1.301,128,2.724,129,1.301,130,1.301,131,1.301,132,1.301,133,1.301,134,1.301,135,0.475,136,1.301,137,1.301,138,3.155,139,1.301,140,1.301,141,1.301,142,1.301,143,1.301,144,2.724,145,1.301,146,1.301,147,1.301,148,2.139,149,1.301,150,1.301,151,1.301,152,2.139,153,1.301]],["title/interfaces/AuthStateModel.html",[74,1.661,154,0.798]],["body/interfaces/AuthStateModel.html",[7,0.294,12,0.044,16,0.369,17,0.369,18,0.294,20,0.532,32,0.037,33,0.037,38,0.369,58,0.555,59,2.401,74,2.728,93,0.822,94,1.192,106,4.217,108,4.217,119,1.607,154,1.311,155,2.993,156,1.02,157,0.838]],["title/components/AuthTextComponent.html",[11,1.457,158,1.661]],["body/components/AuthTextComponent.html",[3,1.638,7,0.219,11,2.425,12,0.046,16,0.274,17,0.274,18,0.219,20,0.396,22,1.125,25,1.523,26,2.965,31,0.2,32,0.03,33,0.03,36,2.249,38,0.274,39,2.596,51,1.99,54,0.841,57,1.219,68,1.269,72,1.89,75,2.569,158,2.899,159,2.741,160,2.741,161,2.741,162,3.495,163,2.228,164,4.299,165,2.741,166,4.299,167,4.85,168,3.764,169,3.764,170,3.764,171,3.764,172,4.628,173,2.741,174,2.741,175,3.764,176,3.764,177,2.596,178,3.764,179,3.764,180,3.764,181,4.628,182,2.741,183,2.741]],["title/classes/CheckLanguage.html",[31,0.203,184,1.287]],["body/classes/CheckLanguage.html",[7,0.35,12,0.045,16,0.347,17,0.347,18,0.276,31,0.352,32,0.035,33,0.035,38,0.347,43,0.857,54,0.773,58,0.651,105,0.773,156,0.981,157,0.815,184,2.033,185,2.388,186,4.125,187,1.121,188,2.883,189,3.571,190,3.463,191,1.603,192,2.815,193,1.121,194,2.069]],["title/classes/CheckUser.html",[31,0.203,40,0.798]],["body/classes/CheckUser.html",[7,0.411,12,0.047,15,0.708,16,0.279,17,0.279,18,0.222,20,0.403,25,1.508,31,0.383,32,0.031,33,0.031,38,0.279,40,1.339,43,0.9,49,1.094,50,1.094,54,0.623,58,0.661,64,0.801,84,1.016,85,1.094,93,0.623,94,0.903,99,1.094,100,1.094,101,0.801,105,0.623,119,0.903,120,1.016,135,1.016,156,0.851,157,0.644,187,0.903,193,1.233,195,1.016,196,2.788,197,1.144]],["title/modules/FireuserModule.html",[0,1.141,198,1.457]],["body/modules/FireuserModule.html",[0,1.451,1,2.255,2,1.313,3,1.497,4,2.113,5,1.728,6,2.66,7,0.355,12,0.047,13,2.438,14,1.728,15,0.636,16,0.251,17,0.251,18,0.2,20,0.762,21,2.826,22,1.028,29,1.16,31,0.183,32,0.028,33,0.028,34,1.853,43,0.423,57,0.811,68,1.16,92,1.728,93,0.79,96,1.16,154,0.72,157,0.692,198,2.624,199,2.036,200,2.505,201,1.728,202,2.874,203,2.036,204,2.874,205,2.874,206,1.728,207,2.874,208,2.874,209,2.036,210,2.036,211,2.036,212,1.637,213,2.036,214,2.173,215,2.036,216,2.036,217,2.036,218,2.036,219,1.313,220,2.036,221,2.874,222,2.036]],["title/interfaces/LanguageConfig.html",[154,0.798,214,1.287]],["body/interfaces/LanguageConfig.html",[1,1.651,4,1.516,6,2.465,7,0.329,12,0.047,16,0.254,17,0.254,18,0.202,20,0.754,21,2.845,22,1.041,29,1.174,31,0.185,32,0.029,33,0.029,34,1.869,38,0.254,43,0.429,57,0.821,58,0.544,68,1.174,92,1.749,93,0.797,96,1.174,154,1.024,156,0.797,157,0.797,198,1.869,201,1.749,202,2.899,203,2.062,204,2.899,205,2.899,206,1.749,207,2.899,208,2.899,209,2.062,210,2.062,211,2.062,212,1.651,213,2.062,214,2.264,215,3.638,216,3.638,217,2.062,218,2.062,219,1.329,220,2.062,221,2.899,222,2.062,223,3.566]],["title/classes/LanguageState.html",[31,0.203,212,1.287]],["body/classes/LanguageState.html",[7,0.221,12,0.047,16,0.18,17,0.18,18,0.143,20,0.548,22,0.738,29,0.832,30,1.074,31,0.202,32,0.022,33,0.022,36,1.654,37,2.821,38,0.18,39,1.909,41,2.613,43,0.57,47,2.327,51,0.832,54,0.965,56,2.144,57,1.399,58,0.498,59,1.894,62,3.356,63,2.743,64,1.293,67,2.613,68,2.084,72,1.909,75,2.016,77,2.327,78,1.909,96,0.832,105,0.402,107,1.24,110,1.24,115,2.327,125,2.327,126,1.24,154,0.516,157,0.57,177,1.909,184,1.754,188,1.654,191,2,194,2.016,212,1.281,214,1.562,224,1.24,225,2.768,226,3.08,227,1.798,228,3.08,229,1.798,230,2.25,231,1.798,232,2.25,233,2.264,234,1.798,235,1.798,236,1.798,237,2.25,238,2.25,239,2.25,240,2.25,241,1.798,242,1.462,243,1.074,244,2.25,245,1.24,246,1.24,247,1.462,248,1.462,249,1.462,250,2.25,251,1.462,252,2.25,253,1.462,254,1.462,255,1.462,256,1.462,257,2.743,258,1.462,259,1.462,260,1.462,261,2.25,262,1.462,263,1.462,264,1.462,265,1.462,266,1.462,267,1.462,268,1.462]],["title/interfaces/LanguageStateModel.html",[154,0.798,233,1.661]],["body/interfaces/LanguageStateModel.html",[7,0.267,12,0.047,16,0.232,17,0.232,18,0.185,20,0.621,22,0.952,29,1.074,30,1.386,31,0.169,32,0.027,33,0.027,36,1.386,37,2.308,38,0.232,41,2.308,43,0.392,47,1.6,57,0.751,58,0.282,62,2.964,64,1.128,67,1.6,68,1.549,75,2,77,2.308,78,1.6,96,1.074,105,0.518,107,1.6,110,1.6,115,2.708,125,2.708,126,1.6,154,0.961,156,0.748,157,0.726,177,1.6,184,1.549,188,2,191,1.549,194,2.838,212,1.074,214,1.074,224,1.6,226,1.886,228,2.721,230,1.886,232,1.886,233,2.346,237,1.886,238,1.886,239,1.886,240,1.886,242,1.886,243,1.386,244,2.721,245,1.6,246,1.6,247,1.886,248,1.886,249,1.886,250,2.721,251,1.886,252,2.721,253,1.886,254,1.886,255,1.886,256,1.886,257,3.192,258,1.886,259,1.886,260,1.886,261,2.721,262,1.886,263,1.886,264,1.886,265,1.886,266,1.886,267,1.886,268,1.886]],["title/classes/UpdateLanguage.html",[31,0.203,191,1.287]],["body/classes/UpdateLanguage.html",[7,0.33,12,0.045,16,0.316,17,0.316,18,0.252,31,0.337,32,0.033,33,0.033,38,0.316,43,0.828,51,1.46,54,1.031,56,1.653,57,1.022,58,0.657,59,1.46,105,0.705,156,0.924,157,0.899,184,1.46,185,2.175,186,3.982,187,1.022,188,2.758,189,2.564,191,1.915,192,3.362,193,1.022,194,3.04,219,2.168,269,3.154,270,4.136,271,3.154]],["title/classes/UserDelete.html",[31,0.203,49,0.798]],["body/classes/UserDelete.html",[7,0.411,12,0.047,15,0.708,16,0.279,17,0.279,18,0.222,20,0.403,25,1.508,31,0.383,32,0.031,33,0.031,38,0.279,40,1.094,43,0.9,49,1.339,50,1.094,54,0.623,58,0.661,64,0.801,84,1.016,85,1.094,93,0.623,94,0.903,99,1.094,100,1.094,101,0.801,105,0.623,119,0.903,120,1.016,135,1.016,156,0.851,157,0.644,187,0.903,193,1.233,195,1.016,197,1.144,272,2.788]],["title/classes/UserFailed.html",[31,0.203,100,0.798]],["body/classes/UserFailed.html",[7,0.404,12,0.046,15,0.665,16,0.262,17,0.262,18,0.209,20,0.378,25,1.485,31,0.377,32,0.029,33,0.029,38,0.262,40,1.047,43,0.887,49,1.047,50,1.047,51,1.212,54,0.937,56,1.372,57,0.848,58,0.665,59,1.212,64,0.752,84,0.954,85,1.047,93,0.585,94,0.848,99,1.047,100,1.303,101,0.752,105,0.585,119,0.848,120,0.954,135,0.954,156,0.814,157,0.616,187,0.848,193,1.181,195,0.954,197,1.958,219,1.911,273,2.618,274,3.646,275,2.618]],["title/classes/UserNull.html",[31,0.203,99,0.798]],["body/classes/UserNull.html",[7,0.411,12,0.047,15,0.708,16,0.279,17,0.279,18,0.222,20,0.403,25,1.508,31,0.383,32,0.031,33,0.031,38,0.279,40,1.094,43,0.9,49,1.094,50,1.094,54,0.623,58,0.661,64,0.801,84,1.016,85,1.094,93,0.623,94,0.903,99,1.339,100,1.094,101,0.801,105,0.623,119,0.903,120,1.016,135,1.016,156,0.851,157,0.644,187,0.903,193,1.233,195,1.016,197,1.144,276,2.788]],["title/classes/UserSignOut.html",[31,0.203,101,0.798]],["body/classes/UserSignOut.html",[7,0.411,12,0.046,15,0.965,16,0.278,17,0.278,18,0.222,20,0.402,25,1.506,31,0.383,32,0.031,33,0.031,38,0.278,40,1.091,43,0.899,49,1.091,50,1.091,54,0.621,58,0.661,64,0.798,84,1.013,85,1.091,93,0.621,94,0.9,99,1.091,100,1.091,101,1.091,105,0.621,119,0.9,120,1.013,135,1.385,156,0.849,157,0.642,187,0.9,193,1.23,195,1.013,197,1.14,277,2.778]],["title/classes/UserSuccess.html",[31,0.203,85,0.798]],["body/classes/UserSuccess.html",[7,0.403,12,0.046,15,0.656,16,0.259,17,0.259,18,0.206,20,0.374,25,1.48,31,0.376,32,0.029,33,0.029,38,0.259,40,1.038,43,0.885,49,1.038,50,1.038,51,1.196,54,0.931,56,1.354,57,0.837,58,0.663,59,1.196,64,0.742,84,0.942,85,1.296,93,0.577,94,0.837,99,1.038,100,1.038,101,0.742,105,0.577,119,1.538,120,1.731,135,0.942,156,0.807,157,0.611,187,0.837,193,1.17,195,0.942,197,1.061,219,1.894,278,2.584,279,3.614,280,2.584]],["title/classes/UserToken.html",[31,0.203,50,0.798]],["body/classes/UserToken.html",[7,0.411,12,0.047,15,0.708,16,0.279,17,0.279,18,0.222,20,0.403,25,1.508,31,0.383,32,0.031,33,0.031,38,0.279,40,1.094,43,0.9,49,1.094,50,1.339,54,0.623,58,0.661,64,0.801,84,1.016,85,1.094,93,0.623,94,0.903,99,1.094,100,1.094,101,0.801,105,0.623,119,0.903,120,1.016,135,1.016,156,0.851,157,0.644,187,0.903,193,1.233,195,1.016,197,1.144,281,2.788]],["title/coverage.html",[282,3.089]],["body/coverage.html",[11,1.476,12,0.045,18,0.225,26,1.942,31,0.397,32,0.031,33,0.031,34,1.476,35,2.29,40,0.809,49,0.809,50,0.809,58,0.343,74,1.683,85,0.809,99,0.809,100,0.809,101,0.809,154,1.252,155,2.29,158,1.683,162,2.29,163,2.29,184,1.304,185,2.645,191,1.304,195,1.885,201,1.942,212,1.304,214,1.304,224,2.645,233,1.683,243,1.683,282,2.29,283,2.817,284,2.817,285,2.817,286,5.525,287,4.36,288,2.29,289,2.817,290,2.817,291,2.817,292,5.17,293,4.36,294,2.817,295,2.817,296,2.817,297,2.817,298,2.817,299,2.817,300,2.817]],["title/dependencies.html",[2,1.753,301,2.318]],["body/dependencies.html",[2,1.983,12,0.046,22,1.553,24,3.076,29,2.149,30,2.261,32,0.037,33,0.037,93,0.845,96,1.752,104,3.076,206,2.61,302,3.784,303,4.643,304,3.784,305,3.784,306,3.784,307,4.643,308,3.784,309,3.784,310,3.784,311,3.784,312,3.784,313,3.784]],["title/index.html",[38,0.278,314,2.259]],["body/index.html",[0,1.838,1,2.496,2,1.87,3,2.133,4,2.133,5,2.461,6,2.133,7,0.285,8,2.901,9,2.901,10,2.901,11,2.868,12,0.043,13,3.088,14,2.461,15,0.906,31,0.26,32,0.036,33,0.036,154,1.025,158,2.133,198,2.689,199,2.901,243,2.133,245,2.461,246,2.461,314,2.901,315,4.477,316,3.569]],["title/modules.html",[0,1.56]],["body/modules.html",[0,1.73,1,1.951,12,0.04,32,0.04,33,0.04,198,2.209,317,4.953,318,4.953,319,4.953,320,4.953]],["title/miscellaneous/typealiases.html",[321,1.884,322,3.345]],["body/miscellaneous/typealiases.html",[12,0.044,32,0.039,33,0.039,38,0.411,58,0.5,288,3.339,321,3.339,323,4.108,324,5.204,325,4.108,326,4.108,327,4.108,328,4.108,329,4.108]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["0.x",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":315,"title":{},"body":{"index.html":{}}}],["1/7",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":316,"title":{},"body":{"index.html":{}}}],["14",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":245,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"index.html":{}}}],["2).tolowercas",{"_index":260,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["2/27",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":246,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"index.html":{}}}],["3.0.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["action",{"_index":64,"title":{},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["action([usernul",{"_index":143,"title":{},"body":{"classes/AuthState.html":{}}}],["action(checklanguag",{"_index":251,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["action(checkus",{"_index":116,"title":{},"body":{"classes/AuthState.html":{}}}],["action(updatelanguag",{"_index":265,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["action(userdelet",{"_index":129,"title":{},"body":{"classes/AuthState.html":{}}}],["action(usersignout",{"_index":131,"title":{},"body":{"classes/AuthState.html":{}}}],["action(usersuccess",{"_index":141,"title":{},"body":{"classes/AuthState.html":{}}}],["action(usertoken",{"_index":123,"title":{},"body":{"classes/AuthState.html":{}}}],["action.lang",{"_index":268,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["actual_compon",{"_index":183,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["afauth",{"_index":60,"title":{},"body":{"classes/AuthState.html":{}}}],["alias",{"_index":323,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular/common",{"_index":24,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":22,"title":{},"body":{"modules/AuthModule.html":{},"components/AuthTextComponent.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":206,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":92,"title":{},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["angularfire2/firestor",{"_index":209,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["angularfireauth",{"_index":53,"title":{},"body":{"classes/AuthState.html":{}}}],["angularfireauthmodul",{"_index":207,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["angularfiremodul",{"_index":204,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["angularfirestoremodul",{"_index":208,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["async",{"_index":47,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["auth",{"_index":25,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["auth.act",{"_index":102,"title":{},"body":{"classes/AuthState.html":{}}}],["auth.model",{"_index":103,"title":{},"body":{"classes/AuthState.html":{}}}],["auth/auth.modul",{"_index":203,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["authmodul",{"_index":1,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"index.html":{},"modules.html":{}}}],["authservic",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["authstat",{"_index":34,"title":{"classes/AuthState.html":{}},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"coverage.html":{}}}],["authstatemodel",{"_index":74,"title":{"interfaces/AuthStateModel.html":{}},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"coverage.html":{}}}],["authtextcompon",{"_index":11,"title":{"components/AuthTextComponent.html":{}},"body":{"modules/AuthModule.html":{},"components/AuthTextComponent.html":{},"coverage.html":{},"index.html":{}}}],["authus",{"_index":106,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{}}}],["availablelanguag",{"_index":216,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["await",{"_index":126,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["bootstrap",{"_index":5,"title":{},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"index.html":{}}}],["brows",{"_index":320,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":317,"title":{},"body":{"modules.html":{}}}],["browserlanguag",{"_index":257,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["catch",{"_index":137,"title":{},"body":{"classes/AuthState.html":{}}}],["catch((err",{"_index":151,"title":{},"body":{"classes/AuthState.html":{}}}],["check",{"_index":189,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/UpdateLanguage.html":{}}}],["checklanguag",{"_index":184,"title":{"classes/CheckLanguage.html":{}},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"coverage.html":{}}}],["checklanguage(ctx",{"_index":230,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["checksess",{"_index":238,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["checkus",{"_index":40,"title":{"classes/CheckUser.html":{}},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["checkuser(ctx",{"_index":61,"title":{},"body":{"classes/AuthState.html":{}}}],["class",{"_index":31,"title":{"classes/AuthState.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{},"index.html":{}}}],["cluster_authmodul",{"_index":8,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_declar",{"_index":9,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_export",{"_index":10,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_fireusermodul",{"_index":199,"title":{},"body":{"modules/FireuserModule.html":{},"index.html":{}}}],["cluster_fireusermodule_import",{"_index":200,"title":{},"body":{"modules/FireuserModule.html":{}}}],["code",{"_index":217,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["command",{"_index":66,"title":{},"body":{"classes/AuthState.html":{}}}],["commonmodul",{"_index":23,"title":{},"body":{"modules/AuthModule.html":{}}}],["compon",{"_index":158,"title":{"components/AuthTextComponent.html":{}},"body":{"components/AuthTextComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":182,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["console.error('[error",{"_index":153,"title":{},"body":{"classes/AuthState.html":{}}}],["console.log('en",{"_index":149,"title":{},"body":{"classes/AuthState.html":{}}}],["console.log('error",{"_index":139,"title":{},"body":{"classes/AuthState.html":{}}}],["console.log('us",{"_index":134,"title":{},"body":{"classes/AuthState.html":{}}}],["console.log('vers",{"_index":146,"title":{},"body":{"classes/AuthState.html":{}}}],["const",{"_index":125,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["constructor",{"_index":51,"title":{},"body":{"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UserFailed.html":{},"classes/UserSuccess.html":{}}}],["constructor(afauth",{"_index":52,"title":{},"body":{"classes/AuthState.html":{}}}],["constructor(error",{"_index":273,"title":{},"body":{"classes/UserFailed.html":{}}}],["constructor(lang",{"_index":269,"title":{},"body":{"classes/UpdateLanguage.html":{}}}],["constructor(priv",{"_index":110,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["constructor(publ",{"_index":193,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["constructor(transl",{"_index":227,"title":{},"body":{"classes/LanguageState.html":{}}}],["constructor(us",{"_index":278,"title":{},"body":{"classes/UserSuccess.html":{}}}],["coverag",{"_index":282,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["ctx",{"_index":67,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["ctx.dispatch(new",{"_index":115,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["ctx.getstate().lang",{"_index":253,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["ctx.patchstat",{"_index":128,"title":{},"body":{"classes/AuthState.html":{}}}],["ctx.setstat",{"_index":267,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["data",{"_index":136,"title":{},"body":{"classes/AuthState.html":{}}}],["declar",{"_index":4,"title":{},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"index.html":{}}}],["decor",{"_index":63,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{}}}],["default",{"_index":105,"title":{},"body":{"classes/AuthState.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["defaultlanguag",{"_index":215,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["defin",{"_index":54,"title":{},"body":{"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["depend",{"_index":2,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"dependencies.html":{},"index.html":{}}}],["direct",{"_index":180,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["dispatch",{"_index":237,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["document",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":160,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["element",{"_index":179,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["enablepersist",{"_index":42,"title":{},"body":{"classes/AuthState.html":{}}}],["err",{"_index":138,"title":{},"body":{"classes/AuthState.html":{}}}],["err.cod",{"_index":152,"title":{},"body":{"classes/AuthState.html":{}}}],["error",{"_index":197,"title":{},"body":{"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["event",{"_index":84,"title":{},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["event.us",{"_index":142,"title":{},"body":{"classes/AuthState.html":{}}}],["export",{"_index":7,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"index.html":{}}}],["facebook",{"_index":328,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["firebas",{"_index":93,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"dependencies.html":{}}}],["firebase.error.default",{"_index":176,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["firebase.firestore().set",{"_index":111,"title":{},"body":{"classes/AuthState.html":{}}}],["firebase.us",{"_index":119,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["firebase/app",{"_index":94,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["firebase/firestor",{"_index":95,"title":{},"body":{"classes/AuthState.html":{}}}],["firebaseconfig",{"_index":222,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["firebaseoptionstoken",{"_index":205,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["fireusermodul",{"_index":198,"title":{"modules/FireuserModule.html":{}},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"index.html":{},"modules.html":{}}}],["forroot(firebaseconfig",{"_index":220,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["function",{"_index":71,"title":{},"body":{"classes/AuthState.html":{}}}],["getlanguag",{"_index":225,"title":{},"body":{"classes/LanguageState.html":{}}}],["getlanguage(st",{"_index":232,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["getsuitablelanguag",{"_index":226,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["getus",{"_index":44,"title":{},"body":{"classes/AuthState.html":{}}}],["getuser(st",{"_index":73,"title":{},"body":{"classes/AuthState.html":{}}}],["github",{"_index":326,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["googl",{"_index":327,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["html",{"_index":178,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["identifi",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":36,"title":{},"body":{"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["import",{"_index":20,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["init",{"_index":80,"title":{},"body":{"classes/AuthState.html":{}}}],["inject",{"_index":243,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{},"index.html":{}}}],["inject('languageconfig",{"_index":248,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["innomobile/cor",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["interfac",{"_index":154,"title":{"interfaces/AuthStateModel.html":{},"interfaces/LanguageConfig.html":{},"interfaces/LanguageStateModel.html":{}},"body":{"interfaces/AuthStateModel.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{},"index.html":{}}}],["lang",{"_index":194,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{}}}],["languag",{"_index":188,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{}}}],["language.act",{"_index":242,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["languageconfig",{"_index":214,"title":{"interfaces/LanguageConfig.html":{}},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{}}}],["languagest",{"_index":212,"title":{"classes/LanguageState.html":{}},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{}}}],["languagestatemodel",{"_index":233,"title":{"interfaces/LanguageStateModel.html":{}},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{}}}],["legend",{"_index":3,"title":{},"body":{"modules/AuthModule.html":{},"components/AuthTextComponent.html":{},"modules/FireuserModule.html":{},"index.html":{}}}],["lib",{"_index":166,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["liter",{"_index":223,"title":{},"body":{"interfaces/LanguageConfig.html":{}}}],["loader",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":121,"title":{},"body":{"classes/AuthState.html":{}}}],["match",{"_index":33,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":165,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["method",{"_index":39,"title":{},"body":{"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"classes/LanguageState.html":{}}}],["miscellan",{"_index":321,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modul",{"_index":0,"title":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"index.html":{},"modules.html":{}}}],["modulewithprovid",{"_index":202,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["name",{"_index":57,"title":{},"body":{"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserFailed.html":{},"classes/UserSuccess.html":{}}}],["networkvalu",{"_index":324,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["ngmodul",{"_index":21,"title":{},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["ngoninit",{"_index":172,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["ngx",{"_index":29,"title":{},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":96,"title":{},"body":{"classes/AuthState.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"dependencies.html":{}}}],["ngxsmodul",{"_index":210,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["ngxsmodule.forfeatur",{"_index":218,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["ngxsoninit",{"_index":37,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["ngxsoninit(ctx",{"_index":78,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["null",{"_index":107,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["observ",{"_index":69,"title":{},"body":{"classes/AuthState.html":{}}}],["oninit",{"_index":164,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["option",{"_index":59,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UserFailed.html":{},"classes/UserSuccess.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"index.html":{}}}],["overview",{"_index":314,"title":{"index.html":{}},"body":{"index.html":{}}}],["packag",{"_index":301,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":250,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["paramet",{"_index":56,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"classes/UpdateLanguage.html":{},"classes/UserFailed.html":{},"classes/UserSuccess.html":{}}}],["peer",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["persist",{"_index":150,"title":{},"body":{"classes/AuthState.html":{}}}],["privat",{"_index":41,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["properti",{"_index":156,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"interfaces/LanguageConfig.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["provid",{"_index":6,"title":{},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"index.html":{}}}],["public",{"_index":219,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/UpdateLanguage.html":{},"classes/UserFailed.html":{},"classes/UserSuccess.html":{}}}],["rc.9",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["readonli",{"_index":186,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/UpdateLanguage.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"index.html":{}}}],["result",{"_index":32,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":68,"title":{},"body":{"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["rxj",{"_index":104,"title":{},"body":{"classes/AuthState.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":98,"title":{},"body":{"classes/AuthState.html":{}}}],["save",{"_index":252,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["section",{"_index":244,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["selector",{"_index":75,"title":{},"body":{"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["setuserstatenul",{"_index":45,"title":{},"body":{"classes/AuthState.html":{}}}],["setuserstatenull(ctx",{"_index":81,"title":{},"body":{"classes/AuthState.html":{}}}],["setuserstateonsuccess",{"_index":46,"title":{},"body":{"classes/AuthState.html":{}}}],["setuserstateonsuccess(ctx",{"_index":83,"title":{},"body":{"classes/AuthState.html":{}}}],["sign",{"_index":135,"title":{},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["signout",{"_index":48,"title":{},"body":{"classes/AuthState.html":{}}}],["some((x",{"_index":263,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["sourc",{"_index":17,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/AuthTextComponent.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["src/.../auth.service.t",{"_index":325,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/auth/auth",{"_index":162,"title":{},"body":{"components/AuthTextComponent.html":{},"coverage.html":{}}}],["src/lib/auth/auth.module.t",{"_index":19,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/lib/fireuser.module.t",{"_index":201,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"coverage.html":{}}}],["src/lib/services/auth.service.t",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/auth/auth.actions.t",{"_index":195,"title":{},"body":{"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["src/lib/store/auth/auth.actions.ts:13",{"_index":272,"title":{},"body":{"classes/UserDelete.html":{}}}],["src/lib/store/auth/auth.actions.ts:17",{"_index":277,"title":{},"body":{"classes/UserSignOut.html":{}}}],["src/lib/store/auth/auth.actions.ts:22",{"_index":279,"title":{},"body":{"classes/UserSuccess.html":{}}}],["src/lib/store/auth/auth.actions.ts:23",{"_index":280,"title":{},"body":{"classes/UserSuccess.html":{}}}],["src/lib/store/auth/auth.actions.ts:27",{"_index":276,"title":{},"body":{"classes/UserNull.html":{}}}],["src/lib/store/auth/auth.actions.ts:31",{"_index":274,"title":{},"body":{"classes/UserFailed.html":{}}}],["src/lib/store/auth/auth.actions.ts:32",{"_index":275,"title":{},"body":{"classes/UserFailed.html":{}}}],["src/lib/store/auth/auth.actions.ts:5",{"_index":196,"title":{},"body":{"classes/CheckUser.html":{}}}],["src/lib/store/auth/auth.actions.ts:9",{"_index":281,"title":{},"body":{"classes/UserToken.html":{}}}],["src/lib/store/auth/auth.model.t",{"_index":155,"title":{},"body":{"interfaces/AuthStateModel.html":{},"coverage.html":{}}}],["src/lib/store/auth/auth.state.t",{"_index":35,"title":{},"body":{"classes/AuthState.html":{},"coverage.html":{}}}],["src/lib/store/auth/auth.state.ts:103",{"_index":86,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:110",{"_index":82,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:120",{"_index":70,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:34",{"_index":76,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:36",{"_index":55,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:46",{"_index":79,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:54",{"_index":65,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:70",{"_index":91,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:80",{"_index":89,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/auth/auth.state.ts:87",{"_index":87,"title":{},"body":{"classes/AuthState.html":{}}}],["src/lib/store/language/language.actions.t",{"_index":185,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/UpdateLanguage.html":{},"coverage.html":{}}}],["src/lib/store/language/language.actions.ts:2",{"_index":270,"title":{},"body":{"classes/UpdateLanguage.html":{}}}],["src/lib/store/language/language.actions.ts:4",{"_index":271,"title":{},"body":{"classes/UpdateLanguage.html":{}}}],["src/lib/store/language/language.actions.ts:8",{"_index":190,"title":{},"body":{"classes/CheckLanguage.html":{}}}],["src/lib/store/language/language.state.t",{"_index":224,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"coverage.html":{}}}],["src/lib/store/language/language.state.ts:23",{"_index":234,"title":{},"body":{"classes/LanguageState.html":{}}}],["src/lib/store/language/language.state.ts:25",{"_index":229,"title":{},"body":{"classes/LanguageState.html":{}}}],["src/lib/store/language/language.state.ts:32",{"_index":236,"title":{},"body":{"classes/LanguageState.html":{}}}],["src/lib/store/language/language.state.ts:43",{"_index":231,"title":{},"body":{"classes/LanguageState.html":{}}}],["src/lib/store/language/language.state.ts:53",{"_index":235,"title":{},"body":{"classes/LanguageState.html":{}}}],["src/lib/store/language/language.state.ts:63",{"_index":241,"title":{},"body":{"classes/LanguageState.html":{}}}],["start",{"_index":239,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["state",{"_index":77,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["state.authus",{"_index":109,"title":{},"body":{"classes/AuthState.html":{}}}],["state.lang",{"_index":247,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["statecontext",{"_index":62,"title":{},"body":{"classes/AuthState.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["statement",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":43,"title":{},"body":{"classes/AuthState.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["store/auth/auth.st",{"_index":211,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["store/language/language.st",{"_index":213,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["string",{"_index":157,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["styleurl",{"_index":168,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["substring(0",{"_index":259,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["support",{"_index":318,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":319,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":97,"title":{},"body":{"classes/AuthState.html":{}}}],["tap((us",{"_index":118,"title":{},"body":{"classes/AuthState.html":{}}}],["templat",{"_index":159,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["templateurl",{"_index":170,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["text",{"_index":167,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["text.compon",{"_index":27,"title":{},"body":{"modules/AuthModule.html":{}}}],["text.component.css",{"_index":169,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["text.component.html",{"_index":171,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["text.component.t",{"_index":163,"title":{},"body":{"components/AuthTextComponent.html":{},"coverage.html":{}}}],["text.component.ts:12",{"_index":174,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["text.component.ts:8",{"_index":173,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["text/auth",{"_index":26,"title":{},"body":{"modules/AuthModule.html":{},"components/AuthTextComponent.html":{},"coverage.html":{}}}],["this.afauth.auth.currentus",{"_index":124,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.auth.currentuser.delet",{"_index":130,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.auth.currentuser.getidtoken",{"_index":127,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.auth.signout",{"_index":133,"title":{},"body":{"classes/AuthState.html":{}}}],["this.afauth.authstate.pip",{"_index":117,"title":{},"body":{"classes/AuthState.html":{}}}],["this.enablepersist",{"_index":114,"title":{},"body":{"classes/AuthState.html":{}}}],["this.getsuitablelanguag",{"_index":255,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["this.languageconfig.availablelanguag",{"_index":262,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["this.languageconfig.defaultlanguag",{"_index":261,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["this.platform.vers",{"_index":145,"title":{},"body":{"classes/AuthState.html":{}}}],["this.translate.getbrowserlang",{"_index":258,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["this.translate.setdefaultlang(this.languageconfig.defaultlanguag",{"_index":249,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["this.translate.use(action.lang).topromis",{"_index":266,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["throw",{"_index":140,"title":{},"body":{"classes/AuthState.html":{}}}],["timestampsinsnapshot",{"_index":112,"title":{},"body":{"classes/AuthState.html":{}}}],["token",{"_index":108,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{}}}],["translat",{"_index":177,"title":{},"body":{"components/AuthTextComponent.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["translate/cor",{"_index":30,"title":{},"body":{"modules/AuthModule.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"dependencies.html":{}}}],["translate/http",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["translatemodul",{"_index":28,"title":{},"body":{"modules/AuthModule.html":{}}}],["translateservic",{"_index":228,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["tree",{"_index":161,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["tri",{"_index":132,"title":{},"body":{"classes/AuthState.html":{}}}],["true",{"_index":113,"title":{},"body":{"classes/AuthState.html":{}}}],["twitter",{"_index":329,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["type",{"_index":58,"title":{},"body":{"classes/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"interfaces/LanguageConfig.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":322,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["updat",{"_index":192,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/UpdateLanguage.html":{}}}],["updatelanguag",{"_index":191,"title":{"classes/UpdateLanguage.html":{}},"body":{"classes/CheckLanguage.html":{},"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{},"classes/UpdateLanguage.html":{},"coverage.html":{}}}],["updatelanguage(ctx",{"_index":240,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["updatelanguage(languag",{"_index":256,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["updatelanguage(sav",{"_index":254,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["user",{"_index":120,"title":{},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["userdelet",{"_index":49,"title":{"classes/UserDelete.html":{}},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["userdelete(ctx",{"_index":88,"title":{},"body":{"classes/AuthState.html":{}}}],["userfail",{"_index":100,"title":{"classes/UserFailed.html":{}},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["usernul",{"_index":99,"title":{"classes/UserNull.html":{}},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["usersignout",{"_index":101,"title":{"classes/UserSignOut.html":{}},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["usersuccess",{"_index":85,"title":{"classes/UserSuccess.html":{}},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["usersuccess(us",{"_index":122,"title":{},"body":{"classes/AuthState.html":{}}}],["usertoken",{"_index":50,"title":{"classes/UserToken.html":{}},"body":{"classes/AuthState.html":{},"classes/CheckUser.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{},"coverage.html":{}}}],["usertoken(ctx",{"_index":90,"title":{},"body":{"classes/AuthState.html":{}}}],["usevalu",{"_index":221,"title":{},"body":{"modules/FireuserModule.html":{},"interfaces/LanguageConfig.html":{}}}],["valu",{"_index":187,"title":{},"body":{"classes/CheckLanguage.html":{},"classes/CheckUser.html":{},"classes/UpdateLanguage.html":{},"classes/UserDelete.html":{},"classes/UserFailed.html":{},"classes/UserNull.html":{},"classes/UserSignOut.html":{},"classes/UserSuccess.html":{},"classes/UserToken.html":{}}}],["var",{"_index":181,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["version",{"_index":144,"title":{},"body":{"classes/AuthState.html":{}}}],["version.android",{"_index":147,"title":{},"body":{"classes/AuthState.html":{}}}],["version.android.major",{"_index":148,"title":{},"body":{"classes/AuthState.html":{}}}],["void",{"_index":72,"title":{},"body":{"classes/AuthState.html":{},"components/AuthTextComponent.html":{},"classes/LanguageState.html":{}}}],["work",{"_index":175,"title":{},"body":{"components/AuthTextComponent.html":{}}}],["x.code",{"_index":264,"title":{},"body":{"classes/LanguageState.html":{},"interfaces/LanguageStateModel.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AuthModule.html":{},"modules/FireuserModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthTextComponent\n\nAuthTextComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthTextComponent->AuthModule\n\n\n\n\n\nAuthTextComponent \n\nAuthTextComponent \n\nAuthTextComponent  -->\n\nAuthModule->AuthTextComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthTextComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AuthTextComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthTextComponent } from './auth-text/auth-text.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule\n  ],\n  declarations: [\n    AuthTextComponent\n  ],\n  exports: [\n    AuthTextComponent\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthState.html":{"url":"classes/AuthState.html","title":"class - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUser\n                            \n                            \n                                    Private\n                                enablePersistence\n                            \n                            \n                                    Static\n                                getUser\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                setUserStateNull\n                            \n                            \n                                setUserStateOnSuccess\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Async\n                                userDelete\n                            \n                            \n                                    Async\n                                userToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.state.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUser(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : Action\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:54\n                            \n                        \n\n\n                \n                    \n                            Commands\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enablePersistence\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enablePersistence()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:120\n                            \n                        \n\n\n                \n                    \n                            Private Functions \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser(state: AuthStateModel)\n                    \n                \n\n                    \n                        \n                            Decorators : Selector\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:34\n                            \n                        \n\n\n                \n                    \n                            Selectors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    AuthStateModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxsOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngxsOnInit(ctx: StateContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:46\n                            \n                        \n\n\n                \n                    \n                            Init\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUserStateNull\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUserStateNull(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : Action\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUserStateOnSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUserStateOnSuccess(ctx: StateContext, event: UserSuccess)\n                    \n                \n\n                    \n                        \n                            Decorators : Action\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:103\n                            \n                        \n\n\n                \n                    \n                            Events\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    UserSuccess\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n                    \n                        \n                            Decorators : Action\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            userDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userDelete(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : Action\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            userToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userToken(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : Action\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/auth/auth.state.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport { Action, Selector, State, StateContext, NgxsOnInit } from '@ngxs/store';\n\nimport { tap } from 'rxjs/operators';\n\nimport {\n    CheckUser,\n    UserToken,\n    UserSuccess,\n    UserNull,\n    UserFailed,\n    UserDelete,\n    UserSignOut\n} from './auth.actions';\nimport { AuthStateModel } from './auth.model';\nimport { Observable } from 'rxjs';\n\n\n@State({\n    name: 'auth',\n    defaults: {\n        authUser: null,\n        token: null\n    }\n})\nexport class AuthState implements NgxsOnInit {\n    /**\n     * Selectors\n     */\n    @Selector()\n    static getUser(state: AuthStateModel) {\n        return state.authUser;\n    }\n\n    constructor(private afAuth: AngularFireAuth) {\n        firebase.firestore().settings({ timestampsInSnapshots: true });\n        this.enablePersistence();\n    }\n\n    /**\n     * Init\n     */\n    ngxsOnInit(ctx: StateContext) {\n        ctx.dispatch(new CheckUser());\n    }\n\n    /**\n     * Commands\n     */\n    @Action(CheckUser)\n    checkUser(ctx: StateContext): Observable {\n        return this.afAuth.authState.pipe(\n            tap((user: firebase.User) => {\n                if (user) {\n                    // User is logged in\n                    ctx.dispatch(new UserToken());\n                    ctx.dispatch(new UserSuccess(user));\n                } else {\n                    // User is logged out\n                    ctx.dispatch(new UserNull());\n                }\n            })\n        );\n    }\n\n    @Action(UserToken)\n    async userToken(ctx: StateContext) {\n        if (this.afAuth.auth.currentUser) {\n            const token = await this.afAuth.auth.currentUser.getIdToken();\n            ctx.patchState({\n                token: token\n            });\n        }\n    }\n\n    @Action(UserDelete)\n    async userDelete(ctx: StateContext) {\n        if (this.afAuth.auth.currentUser) {\n            return await this.afAuth.auth.currentUser.delete();\n        }\n    }\n\n    @Action(UserSignOut)\n    async signOut() {\n        try {\n            await this.afAuth.auth.signOut();\n            // console.log('User Sign Out', data);\n            return true;\n        } catch (err) {\n            // console.log('Error', err);\n            throw err;\n        }\n    }\n\n    /**\n     * Events\n     */\n\n    @Action(UserSuccess)\n    setUserStateOnSuccess(ctx: StateContext, event: UserSuccess) {\n        ctx.patchState({\n            authUser: event.user\n        });\n    }\n\n    @Action([UserNull, UserFailed])\n    setUserStateNull(ctx: StateContext) {\n        ctx.patchState({\n            authUser: null,\n            token: null\n        });\n    }\n\n\n    /** Private Functions */\n\n    private enablePersistence() {\n        // const version = this.platform.versions();\n\n        // console.log('VERSION', version);\n\n        /*\n        if (version && version.android) {\n          if (version.android.major && version.android.major  {\n                console.log('enabled Persistence');\n            })\n            .catch((err) => {\n                if (err && err.code) {\n                    console.error('[ERROR] enablePersistence', err.code);\n                }\n            });\n\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthStateModel.html":{"url":"interfaces/AuthStateModel.html","title":"interface - AuthStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        authUser\n                                \n                                \n                                            Optional\n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authUser\n                                    \n                                \n                                \n                                    \n                                        authUser:     firebase.User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     firebase.User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import firebase from 'firebase/app';\n\nexport interface AuthStateModel {\n  authUser?: firebase.User;\n  token?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthTextComponent.html":{"url":"components/AuthTextComponent.html","title":"component - AuthTextComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthTextComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/auth/auth-text/auth-text.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-auth-text\n            \n\n            \n                styleUrls\n                auth-text.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth-text.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/auth/auth-text/auth-text.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/auth/auth-text/auth-text.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-auth-text',\n  templateUrl: './auth-text.component.html',\n  styleUrls: ['./auth-text.component.css']\n})\nexport class AuthTextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  auth-text works! {{'FIREBASE.ERROR.DEFAULT' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  auth-text works! {{\\'FIREBASE.ERROR.DEFAULT\\' | translate}}'\n    var COMPONENTS = [{'name': 'AuthTextComponent', 'selector': 'lib-auth-text'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthTextComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckLanguage.html":{"url":"classes/CheckLanguage.html","title":"class - CheckLanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckLanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[LANGUAGE] Check'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/language/language.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateLanguage {\n    static readonly type = '[LANGUAGE] Update';\n\n    constructor(public lang: string) {}\n}\n\nexport class CheckLanguage {\n    static readonly type = '[LANGUAGE] Check';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckUser.html":{"url":"classes/CheckUser.html","title":"class - CheckUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] CheckUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import firebase from 'firebase/app';\n\n// Actions\nexport class CheckUser {\n  static type = '[Auth] CheckUser';\n}\n\nexport class UserToken {\n  static type = '[Auth] UserToken';\n}\n\nexport class UserDelete {\n  static type = '[Auth] UserDelete';\n}\n\nexport class UserSignOut {\n  static type = '[Auth] Sign out';\n}\n\n// Events\nexport class UserSuccess {\n  static type = '[Auth] UserSuccess';\n  constructor(public user: firebase.User) {}\n}\n\nexport class UserNull {\n  static type = '[Auth] UserNull';\n}\n\nexport class UserFailed {\n  static type = '[Auth] UserFailed';\n  constructor(public error: any) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FireuserModule.html":{"url":"modules/FireuserModule.html","title":"module - FireuserModule","body":"\n                   \n\n\n\n\n  Modules\n  FireuserModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FireuserModule\n\n\n\ncluster_FireuserModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nFireuserModule\n\nFireuserModule\n\nFireuserModule -->\n\nAuthModule->FireuserModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/fireuser.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    AuthModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        \nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AuthModule } from './auth/auth.module';\n\n// Firebase\nimport { AngularFireModule, FirebaseOptionsToken } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\n\n// Ngxs\nimport { NgxsModule } from '@ngxs/store';\nimport { AuthState } from './store/auth/auth.state';\nimport { LanguageState } from './store/language/language.state';\n\nexport interface LanguageConfig {\n  defaultLanguage: string;\n  availableLanguages: {\n    code: string;\n    name: string;\n  }[];\n}\n\n@NgModule({\n  imports: [\n    AngularFireModule,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AuthModule,\n    NgxsModule.forFeature([\n      AuthState,\n      LanguageState\n    ])\n  ],\n  declarations: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class FireuserModule {\n  public static forRoot(firebaseConfig, languageConfig: LanguageConfig): ModuleWithProviders {\n    return {\n      ngModule: FireuserModule,\n      providers: [\n        // Firebase,\n        { provide: FirebaseOptionsToken, useValue: firebaseConfig },\n        { provide: 'languageConfig', useValue: languageConfig }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LanguageConfig.html":{"url":"interfaces/LanguageConfig.html","title":"interface - LanguageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LanguageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/fireuser.module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        availableLanguages\n                                \n                                \n                                        defaultLanguage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableLanguages\n                                    \n                                \n                                \n                                    \n                                        availableLanguages:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultLanguage\n                                    \n                                \n                                \n                                    \n                                        defaultLanguage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AuthModule } from './auth/auth.module';\n\n// Firebase\nimport { AngularFireModule, FirebaseOptionsToken } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\n\n// Ngxs\nimport { NgxsModule } from '@ngxs/store';\nimport { AuthState } from './store/auth/auth.state';\nimport { LanguageState } from './store/language/language.state';\n\nexport interface LanguageConfig {\n  defaultLanguage: string;\n  availableLanguages: {\n    code: string;\n    name: string;\n  }[];\n}\n\n@NgModule({\n  imports: [\n    AngularFireModule,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AuthModule,\n    NgxsModule.forFeature([\n      AuthState,\n      LanguageState\n    ])\n  ],\n  declarations: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class FireuserModule {\n  public static forRoot(firebaseConfig, languageConfig: LanguageConfig): ModuleWithProviders {\n    return {\n      ngModule: FireuserModule,\n      providers: [\n        // Firebase,\n        { provide: FirebaseOptionsToken, useValue: firebaseConfig },\n        { provide: 'languageConfig', useValue: languageConfig }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LanguageState.html":{"url":"classes/LanguageState.html","title":"class - LanguageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LanguageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLanguage\n                            \n                            \n                                    Static\n                                getLanguage\n                            \n                            \n                                    Private\n                                getSuitableLanguage\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    Async\n                                updateLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, languageConfig: )\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/language/language.state.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageConfig\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckLanguage(ctx: StateContext)\n                    \n                \n\n                    \n                        \n                            Decorators : Action\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/language/language.state.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLanguage(state: LanguageStateModel)\n                    \n                \n\n                    \n                        \n                            Decorators : Selector\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/language/language.state.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    LanguageStateModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getSuitableLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSuitableLanguage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/store/language/language.state.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxsOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngxsOnInit(ctx: StateContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/store/language/language.state.ts:32\n                            \n                        \n\n\n                \n                    \n                            Dispatch CheckSession on start\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            updateLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLanguage(ctx: StateContext, action: UpdateLanguage)\n                    \n                \n\n                    \n                        \n                            Decorators : Action\n                        \n                    \n\n                        \n                            \n                                    Defined in src/lib/store/language/language.state.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                        \n                                                                    StateContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                        \n                                                                    UpdateLanguage\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { State, Action, StateContext, Selector, NgxsOnInit } from '@ngxs/store';\nimport { UpdateLanguage, CheckLanguage } from './language.actions';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Inject } from '@angular/core';\n\n// Section 2\nexport interface LanguageStateModel {\n    lang: string;\n}\n\n// Section 3\n@State({\n    name: 'language',\n    defaults: {\n        lang: null\n    }\n})\nexport class LanguageState implements NgxsOnInit {\n\n    @Selector()\n    static getLanguage(state: LanguageStateModel) {\n        return state.lang;\n    }\n\n    constructor(private translate: TranslateService, @Inject('languageConfig') private languageConfig) { }\n\n    /**\n     * Dispatch CheckSession on start\n     */\n    ngxsOnInit(ctx: StateContext) {\n        this.translate.setDefaultLang(this.languageConfig.defaultLanguage);\n        ctx.dispatch(new CheckLanguage());\n    }\n\n    /**\n     *\n     * @param ctx\n     * @param action\n     */\n    @Action(CheckLanguage)\n    checkLanguage(ctx: StateContext) {\n        const saved = ctx.getState().lang;\n        if (saved) {\n            ctx.dispatch(new UpdateLanguage(saved));\n        } else {\n            const language = this.getSuitableLanguage();\n            ctx.dispatch(new UpdateLanguage(language));\n        }\n    }\n\n    private getSuitableLanguage() {\n        const browserLanguage: string = this.translate.getBrowserLang()\n            .substring(0, 2).toLowerCase() || this.languageConfig.defaultLanguage;\n        return this.languageConfig.availableLanguages\n            .some((x: any) => x.code === browserLanguage)\n            ? browserLanguage\n            : this.languageConfig.defaultLanguage;\n    }\n\n    @Action(UpdateLanguage)\n    async updateLanguage(ctx: StateContext, action: UpdateLanguage) {\n        await this.translate.use(action.lang).toPromise();\n        ctx.setState({ lang: action.lang });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LanguageStateModel.html":{"url":"interfaces/LanguageStateModel.html","title":"interface - LanguageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LanguageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lang\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { State, Action, StateContext, Selector, NgxsOnInit } from '@ngxs/store';\nimport { UpdateLanguage, CheckLanguage } from './language.actions';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Inject } from '@angular/core';\n\n// Section 2\nexport interface LanguageStateModel {\n    lang: string;\n}\n\n// Section 3\n@State({\n    name: 'language',\n    defaults: {\n        lang: null\n    }\n})\nexport class LanguageState implements NgxsOnInit {\n\n    @Selector()\n    static getLanguage(state: LanguageStateModel) {\n        return state.lang;\n    }\n\n    constructor(private translate: TranslateService, @Inject('languageConfig') private languageConfig) { }\n\n    /**\n     * Dispatch CheckSession on start\n     */\n    ngxsOnInit(ctx: StateContext) {\n        this.translate.setDefaultLang(this.languageConfig.defaultLanguage);\n        ctx.dispatch(new CheckLanguage());\n    }\n\n    /**\n     *\n     * @param ctx\n     * @param action\n     */\n    @Action(CheckLanguage)\n    checkLanguage(ctx: StateContext) {\n        const saved = ctx.getState().lang;\n        if (saved) {\n            ctx.dispatch(new UpdateLanguage(saved));\n        } else {\n            const language = this.getSuitableLanguage();\n            ctx.dispatch(new UpdateLanguage(language));\n        }\n    }\n\n    private getSuitableLanguage() {\n        const browserLanguage: string = this.translate.getBrowserLang()\n            .substring(0, 2).toLowerCase() || this.languageConfig.defaultLanguage;\n        return this.languageConfig.availableLanguages\n            .some((x: any) => x.code === browserLanguage)\n            ? browserLanguage\n            : this.languageConfig.defaultLanguage;\n    }\n\n    @Action(UpdateLanguage)\n    async updateLanguage(ctx: StateContext, action: UpdateLanguage) {\n        await this.translate.use(action.lang).toPromise();\n        ctx.setState({ lang: action.lang });\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLanguage.html":{"url":"classes/UpdateLanguage.html","title":"class - UpdateLanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/language/language.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lang\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lang: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/language/language.actions.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lang:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/language/language.actions.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[LANGUAGE] Update'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/language/language.actions.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateLanguage {\n    static readonly type = '[LANGUAGE] Update';\n\n    constructor(public lang: string) {}\n}\n\nexport class CheckLanguage {\n    static readonly type = '[LANGUAGE] Check';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDelete.html":{"url":"classes/UserDelete.html","title":"class - UserDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] UserDelete'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import firebase from 'firebase/app';\n\n// Actions\nexport class CheckUser {\n  static type = '[Auth] CheckUser';\n}\n\nexport class UserToken {\n  static type = '[Auth] UserToken';\n}\n\nexport class UserDelete {\n  static type = '[Auth] UserDelete';\n}\n\nexport class UserSignOut {\n  static type = '[Auth] Sign out';\n}\n\n// Events\nexport class UserSuccess {\n  static type = '[Auth] UserSuccess';\n  constructor(public user: firebase.User) {}\n}\n\nexport class UserNull {\n  static type = '[Auth] UserNull';\n}\n\nexport class UserFailed {\n  static type = '[Auth] UserFailed';\n  constructor(public error: any) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFailed.html":{"url":"classes/UserFailed.html","title":"class - UserFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] UserFailed'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import firebase from 'firebase/app';\n\n// Actions\nexport class CheckUser {\n  static type = '[Auth] CheckUser';\n}\n\nexport class UserToken {\n  static type = '[Auth] UserToken';\n}\n\nexport class UserDelete {\n  static type = '[Auth] UserDelete';\n}\n\nexport class UserSignOut {\n  static type = '[Auth] Sign out';\n}\n\n// Events\nexport class UserSuccess {\n  static type = '[Auth] UserSuccess';\n  constructor(public user: firebase.User) {}\n}\n\nexport class UserNull {\n  static type = '[Auth] UserNull';\n}\n\nexport class UserFailed {\n  static type = '[Auth] UserFailed';\n  constructor(public error: any) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNull.html":{"url":"classes/UserNull.html","title":"class - UserNull","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNull\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] UserNull'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import firebase from 'firebase/app';\n\n// Actions\nexport class CheckUser {\n  static type = '[Auth] CheckUser';\n}\n\nexport class UserToken {\n  static type = '[Auth] UserToken';\n}\n\nexport class UserDelete {\n  static type = '[Auth] UserDelete';\n}\n\nexport class UserSignOut {\n  static type = '[Auth] Sign out';\n}\n\n// Events\nexport class UserSuccess {\n  static type = '[Auth] UserSuccess';\n  constructor(public user: firebase.User) {}\n}\n\nexport class UserNull {\n  static type = '[Auth] UserNull';\n}\n\nexport class UserFailed {\n  static type = '[Auth] UserFailed';\n  constructor(public error: any) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSignOut.html":{"url":"classes/UserSignOut.html","title":"class - UserSignOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSignOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] Sign out'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import firebase from 'firebase/app';\n\n// Actions\nexport class CheckUser {\n  static type = '[Auth] CheckUser';\n}\n\nexport class UserToken {\n  static type = '[Auth] UserToken';\n}\n\nexport class UserDelete {\n  static type = '[Auth] UserDelete';\n}\n\nexport class UserSignOut {\n  static type = '[Auth] Sign out';\n}\n\n// Events\nexport class UserSuccess {\n  static type = '[Auth] UserSuccess';\n  constructor(public user: firebase.User) {}\n}\n\nexport class UserNull {\n  static type = '[Auth] UserNull';\n}\n\nexport class UserFailed {\n  static type = '[Auth] UserFailed';\n  constructor(public error: any) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSuccess.html":{"url":"classes/UserSuccess.html","title":"class - UserSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: firebase.User)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/auth/auth.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    firebase.User\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] UserSuccess'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     firebase.User\n\n                    \n                \n                    \n                        \n                            Type :     firebase.User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import firebase from 'firebase/app';\n\n// Actions\nexport class CheckUser {\n  static type = '[Auth] CheckUser';\n}\n\nexport class UserToken {\n  static type = '[Auth] UserToken';\n}\n\nexport class UserDelete {\n  static type = '[Auth] UserDelete';\n}\n\nexport class UserSignOut {\n  static type = '[Auth] Sign out';\n}\n\n// Events\nexport class UserSuccess {\n  static type = '[Auth] UserSuccess';\n  constructor(public user: firebase.User) {}\n}\n\nexport class UserNull {\n  static type = '[Auth] UserNull';\n}\n\nexport class UserFailed {\n  static type = '[Auth] UserFailed';\n  constructor(public error: any) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserToken.html":{"url":"classes/UserToken.html","title":"class - UserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/auth/auth.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] UserToken'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/auth/auth.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import firebase from 'firebase/app';\n\n// Actions\nexport class CheckUser {\n  static type = '[Auth] CheckUser';\n}\n\nexport class UserToken {\n  static type = '[Auth] UserToken';\n}\n\nexport class UserDelete {\n  static type = '[Auth] UserDelete';\n}\n\nexport class UserSignOut {\n  static type = '[Auth] Sign out';\n}\n\n// Events\nexport class UserSuccess {\n  static type = '[Auth] UserSuccess';\n  constructor(public user: firebase.User) {}\n}\n\nexport class UserNull {\n  static type = '[Auth] UserNull';\n}\n\nexport class UserFailed {\n  static type = '[Auth] UserFailed';\n  constructor(public error: any) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/lib/auth/auth-text/auth-text.component.ts\n            \n            \n                component\n            \n            \n                AuthTextComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/fireuser.module.ts\n            \n            \n                interface\n            \n            \n                LanguageConfig\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                7 %\n                (2/27)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                CheckUser\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                UserDelete\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                UserFailed\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                UserNull\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                UserSignOut\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                UserSuccess\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.actions.ts\n            \n            \n                class\n            \n            \n                UserToken\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.model.ts\n            \n            \n                interface\n            \n            \n                AuthStateModel\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/store/auth/auth.state.ts\n            \n            \n                class\n            \n            \n                AuthState\n            \n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                    src/lib/store/language/language.actions.ts\n            \n            \n                class\n            \n            \n                CheckLanguage\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/store/language/language.actions.ts\n            \n            \n                class\n            \n            \n                UpdateLanguage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/store/language/language.state.ts\n            \n            \n                class\n            \n            \n                LanguageState\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                    src/lib/store/language/language.state.ts\n            \n            \n                interface\n            \n            \n                LanguageStateModel\n            \n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer Dependencies\n    \n    \n        \n            @angular/common : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.0\n        \n            @ngx-translate/http-loader : ^3.0.0\n        \n            @ngxs/store : ^3.0.0\n        \n            @innomobile/core : ^0.x\n        \n            angularfire2 : ^5.0.0-rc.9\n        \n            firebase : ^5.0.2\n        \n            rxjs : ^6.1.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_FireuserModule\n\n\n\n\nAuthTextComponent\n\nAuthTextComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthTextComponent->AuthModule\n\n\n\n\n\nAuthTextComponent \n\nAuthTextComponent \n\nAuthTextComponent  -->\n\nAuthModule->AuthTextComponent \n\n\n\n\n\nFireuserModule\n\nFireuserModule\n\nFireuserModule -->\n\nAuthModule->FireuserModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 component\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FireuserModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NetworkValue   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/auth.service.ts\n    \n        \n            \n                \n                    \n                        \n                        NetworkValue\n                    \n                \n                \n                    \n                        NetworkValue:     \"github\" | \"google\" | \"facebook\" | \"twitter\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
